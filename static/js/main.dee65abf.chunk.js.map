{"version":3,"sources":["redux/actions.ts","fakeBD.ts","lang/index.ts","lang/ru.ts","lang/de.ts","constants/rootUrl.ts","components/Auth/index.tsx","constants/fieldNames.ts","constants/selectValues.ts","helpers/deepCopy.ts","redux/reducers.ts","components/DeliveryForm/index.tsx","components/LeftMenu/index.tsx","components/Cart/index.tsx","redux/index.ts","index.tsx"],"names":["cartProductsActions","fakeBD","customers","customerNumber","phoneNumber","deliveryCost","name","street","houseNumber","plz","city","formDataActions","langMap","authTitle","organizationNumber","username","password","autoLogin","login","tableOrders","selfPickUp","sales","phoneMonitor","clientComment","clear","goToOrder","logout","callForm","allOrders","cookingMonitor","carMonitor","report","settings","help","quantity","article","productName","price","ROOT_URL","Title","Typography","Auth","connect","state","lang","languages","code","user","userRole","role","dispatch","addUser","type","Form","create","withRouter","form","history","useState","errMsg","setErrMsg","language","setLanguage","useEffect","setFieldsValue","push","getFieldDecorator","id","onSubmit","e","preventDefault","validateFields","err","values","getFieldsValue","className","autoComplete","level","style","textAlign","Item","rules","required","message","pattern","autoFocus","prefix","color","placeholder","valuePropName","initialValue","htmlType","fieldNames","selectValues","deepCopy","object","newObject","Array","isArray","deepArrayCopy","Object","keys","key","arr","map","item","initialFormDataState","initialCartProductsState","Option","Select","formItemLayout","labelCol","xs","span","sm","lg","xl","wrapperCol","dataSourceActions","ADD_TO_DATA_SOURCE","dataSourceReducer","action","dataSourceName","dataSourceData","addToDataSource","initialDataSourceState","DeliveryForm","formDataState","ownProps","addDataToFormData","value","fieldName","fieldValue","updateFieldsOfFormData","newState","updateAllFieldsOfFormData","clearFields","useReducer","dataSourceState","dispatchToDataSource","dataSourceLiveState","dispatchToDataSourceLive","window","addEventListener","handleEscDown","removeEventListener","object1","object2","length","entries","compareTwoObjects","onFieldChange","useCallback","handleSearch","arg","filter","startsWith","fetched","toString","nextPage","handleClearClick","handleSubmit","handleEnterDown","fieldId","customer","find","onKeyDown","width","maxWidth","label","dataSource","onSearch","onSelect","maxLength","onChange","display","flexFlow","justifyContent","size","onClick","Header","Layout","Content","Sider","Text","LeftMenu","logoutFromUser","changeLang","changeLanguage","collapsed","setCollapsed","handleLangChange","target","handleCollapse","minHeight","collapsible","onCollapse","theme","overflow","height","left","defaultSelectedKeys","mode","disabled","Group","Button","paddingBottom","borderRight","background","marginTop","margin","data","children","parentArticle","rowSelection","selectedRowKeys","selectedRows","console","log","record","selected","onSelectAll","changeRows","props","cartProducts","addProduct","ADD_PRODUCT_TO_CART","addProductToCart","addAddition","productArticle","additionArticle","additionName","additionPrice","ADD_ADDITION_TO_PRODUCT_IN_CART","addAdditionToProductInCart","incrementProduct","INCREMENT_QUANTITY_OF_PRODUCT_IN_CART","incrementQuantityOfProductInCart","decrementProduct","DECREMENT_QUANTITY_OF_PRODUCT_IN_CART","decrementQuantityOfProductInCart","incrementAddition","INCREMENT_QUANTITY_OF_ADDITION_OF_PRODUCT","incrementQuantityOfAdditionOfProduct","decrementAddition","DECREMENT_QUANTITY_OF_ADDITION_OF_PRODUCT","decrementQuantityOfAdditionOfProduct","products","addToCart","product","addition","decrementFromCart","deleteFromCart","columns1","title","dataIndex","render","columns2","defaultExpandAllRows","columns","appState","combineReducers","articleIndex","findIndex","prevQuantity","productArticleIndex","oldAdditions","additionArticleIndex","productAdditions","undefined","DELETE_PRODUCT_FROM_CART","DELETE_ADDITION_OF_PRODUCT_FROM_CART","productIndex","additions","currentQuantity","splice","additionIndex","initialState","JSON","parse","localStorage","getItem","store","createStore","subscribe","setItem","stringify","getState","ReactDOM","path","component","exact","Cart","document","getElementById"],"mappings":"qPAaYA,E,qICqBGC,G,OAlCA,CACXC,UAAW,CACP,CACIC,eAAgB,GAEpB,CACIA,eAAgB,GAEpB,CACIA,eAAgB,GAEpB,CACIA,eAAgB,GAChBC,YAAa,YACbC,aAAc,OACdC,KAAM,6CACNC,OAAQ,6CACRC,YAAa,KACbC,IAAK,SACLC,KAAM,wCAEV,CACIP,eAAgB,QDffQ,EACO,mBADPA,EAEQ,oBAFRA,EAGO,oB,SAGRX,O,6CAAAA,I,qEAAAA,I,uDAAAA,I,+EAAAA,I,iFAAAA,I,iFAAAA,I,yFAAAA,I,0FAAAA,M,KAYL,I,EEfMY,EAAuB,CAClC,GCXS,CACPC,UAAW,qEACXC,mBAAoB,oGACpBC,SAAU,8FACVC,SAAU,uCACVC,UAAW,kFACXC,MAAO,iCACPC,YAAa,oBACbC,WAAY,gBACZC,MAAO,cACPC,aAAc,kBACdnB,eAAgB,4EAChBC,YAAa,kFACbE,KAAM,qBACNC,OAAQ,iCACRC,YAAa,0DACbC,IAAK,wFACLC,KAAM,iCACNa,cAAe,gHACflB,aAAc,0GACdmB,MAAO,mDACPC,UAAW,8FACXC,OAAQ,iCACRC,SAAU,mDACVC,UAAW,0DACXC,eAAgB,4EAChBC,WAAY,8FACZC,OAAQ,iCACRC,SAAU,yDACVC,KAAM,uCACNC,SAAU,+DACVC,QAAS,6CACTC,YAAa,2EACbC,MAAO,4BDrBT,GEZS,CACPxB,UAAW,mBACXC,mBAAoB,cACpBC,SAAU,eACVC,SAAU,WACVC,UAAW,uBACXC,MAAO,QACPC,YAAa,oBACbC,WAAY,gBACZC,MAAO,cACPC,aAAc,kBACdnB,eAAgB,eAChBC,YAAa,eACbE,KAAM,OACNC,OAAQ,UACRC,YAAa,aACbC,IAAK,MACLC,KAAM,QACNa,cAAe,YACflB,aAAc,iBACdmB,MAAO,aACPC,UAAW,aACXC,OAAQ,SACRC,SAAU,eACVC,UAAW,oBACXC,eAAgB,iBAChBC,WAAY,iBACZC,OAAQ,YACRC,SAAU,gBACVC,KAAM,QACNC,SAAU,+DACVC,QAAS,6CACTC,YAAa,2EACbC,MAAO,6BCjCEC,EAAW,oBCoBhBC,EAAUC,IAAVD,MA4GKE,EAAOC,YAhBoE,SAACC,GACvF,MAAO,CACLC,KAAMD,EAAME,UAAUD,KACtBE,KAAMH,EAAMI,KAAKD,KACjBE,SAAUL,EAAMI,KAAKE,OAIyE,SAACC,GACjG,MAAO,CACLC,QADK,SACGF,EAAcH,GACpBI,ENhG8B,SAACD,EAAMH,GAAP,MAAiB,CAAEM,KAvB/B,WAuB+CH,OAAMH,QMgG9DK,CAAQF,EAAMH,OAKTJ,CAA6CW,IAAKC,OAA8C,CAAEhD,KAAM,gBAA3D+C,CAA6EE,YA1GrH,SAAC,GAAsE,IAApEC,EAAmE,EAAnEA,KAAMC,EAA6D,EAA7DA,QAASb,EAAoD,EAApDA,KAAMO,EAA8C,EAA9CA,QAASL,EAAqC,EAArCA,KAAME,EAA+B,EAA/BA,SAA+B,EACjEU,mBAAS,IADwD,mBACtFC,EADsF,KAC9EC,EAD8E,OAE7DF,mBAAS9C,EAAQgC,IAF4C,mBAEtFiB,EAFsF,KAE5EC,EAF4E,KAI7FC,oBAAU,kBAAMP,EAAKQ,eAAe,CAAElB,UAAS,IAE/CiB,oBAAU,WACJf,GACFS,EAAQQ,KAAR,UAAgB3B,EAAhB,WAED,CAACU,IAEJe,oBAAU,WACRD,EAAYlD,EAAQgC,KACnB,CAACA,IAEJ,IAaUsB,EAAsBV,EAAtBU,kBACR,OACI,yBAAKC,GAAG,qCACR,kBAAC,IAAD,CAAMC,SAhBS,SAACC,GACpBA,EAAEC,iBACFd,EAAKe,eAAe,SAACC,EAAUC,GAC7B,ILdevD,EAAeF,EKcxB+B,GLdS7B,EKcGuD,EAAO1D,SLdKC,EKcKyD,EAAOzD,SLb9B,SAAVE,GAAiC,SAAbF,EACb,CAAEiC,KAAM,SAEZ,OKWAuB,GAAOzB,GACVI,EAAQJ,EAAKE,KAAMO,EAAKkB,iBAAiB5B,MACzCW,EAAQQ,KAAR,UAAgB3B,EAAhB,WACUS,GACVa,EAAU,oLAQoBe,UAAU,aAAaC,aAAa,OAC9D,kBAACrC,EAAD,CAAOsC,MAAO,EAAGC,MAAO,CAACC,UAAW,WAAYlB,EAAShD,WACzD,kBAAC,IAAKmE,KAAN,KACCd,EAAkB,OAAQ,CACvBe,MAAO,CACL,CAAEC,UAAU,EAAMC,QAAS,iEAC7B,CAAEC,QAAS,SAAUD,QAAS,gIAHjCjB,CAMG,kBAAC,IAAD,CAEAmB,WAAS,EACTT,aAAa,MACbU,OAAQ,kBAAC,IAAD,CAAMlC,KAAK,SAAS0B,MAAO,CAAES,MAAO,qBAC5CC,YAAa3B,EAAS/C,uBAI1B,kBAAC,IAAKkE,KAAN,KACCd,EAAkB,WAAY,CAC3Be,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,4IADtCjB,CAGG,kBAAC,IAAD,CACAU,aAAa,MACbU,OAAQ,kBAAC,IAAD,CAAMlC,KAAK,OAAO0B,MAAO,CAAES,MAAO,qBAC1CC,YAAa3B,EAAS9C,aAI1B,kBAAC,IAAKiE,KAAN,KACCd,EAAkB,WAAY,CAC3Be,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,qFADtCjB,CAGG,kBAAC,IAAD,CACAU,aAAa,MACbU,OAAQ,kBAAC,IAAD,CAAMlC,KAAK,OAAO0B,MAAO,CAAES,MAAO,qBAC1CnC,KAAK,WACLoC,YAAa3B,EAAS7C,aAI1B,kBAAC,IAAKgE,KAAN,KACCd,EAAkB,WAAY,CAC3BuB,cAAe,UACfC,cAAc,GAFjBxB,CAGE,kBAAC,IAAD,KAAWL,EAAS5C,YACtB0C,GAAU,6BACP,kBAAC,IAAD,CAAOP,KAAK,QAAQ+B,QAASxB,KAEjC,kBAAC,IAAD,CAAQP,KAAK,UAAUuC,SAAS,SAAShB,UAAU,qBAC9Cd,EAAS3C,c,+ECxEX0E,EAhCyB,CACtCzF,eAAgB,iBAChBC,YAAa,cACbE,KAAM,OACNC,OAAQ,SACRC,YAAa,cACbC,IAAK,MACLC,KAAM,OACNa,cAAe,gBACflB,aAAc,eACd8B,QAAS,UACTD,SAAU,WACVE,YAAa,cACbC,MAAO,SCbIwD,EAAe,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,Q,qOCAtE,SAASC,EAA2BC,GACzC,IAAIC,EACJ,GAAIC,MAAMC,QAAQH,GAChB,OAAOI,EAAcJ,GAChB,GAAsB,kBAAXA,EAGhB,OAAOA,EAFPC,E,qVAAS,IAAQD,GAInB,cAAiBK,OAAOC,KAAKL,GAA7B,eAAyC,CAApC,IACCM,EADO,KAEPL,MAAMC,QAAQF,EAAUM,IAE1BN,EAAUM,GAAOH,EAAcH,EAAUM,IACN,kBAAnBN,EAAUM,KAC1BN,EAAUM,GAAOR,EAASE,EAAUM,KAGxC,OAAON,EAGT,SAASG,EAAoCI,GAC3C,OAAOA,EAAIC,IAAI,SAACC,GAAD,OAAeX,EAASW,K,mjBCJlC,I,EAyBMC,GAAyB,mBACnCd,EAAWzF,eAAiB,IADO,cAEnCyF,EAAWxF,YAAc,IAFU,cAGnCwF,EAAWzF,eAAiB,IAHO,cAInCyF,EAAWxF,YAAc,IAJU,cAKnCwF,EAAWtF,KAAO,IALiB,cAMnCsF,EAAWrF,OAAS,IANe,cAOnCqF,EAAWpF,YAAc,IAPU,cAQnCoF,EAAWnF,IAAM,IARkB,cASnCmF,EAAWlF,KAAO,IATiB,cAUnCkF,EAAWrE,cAAgB,IAVQ,cAWnCqE,EAAWvF,aAAewF,EAAa,IAXJ,GAqCzBc,EAA2B,G,gOC1DhCC,EAAWC,IAAXD,OAEFE,EAAiB,CACrBC,SAAU,CACRC,GAAI,CAAEC,KAAM,IACZC,GAAI,CAAED,KAAM,IACZE,GAAI,CAAEF,KAAM,IACZG,GAAI,CAAEH,KAAM,KAEdI,WAAY,CACVL,GAAI,CAAEC,KAAM,IACZC,GAAI,CAAED,KAAM,IACZE,GAAI,CAAEF,KAAM,IACZG,GAAI,CAAEH,KAAM,MAIVK,EAAoB,CACxBC,mBAAoB,sBAStB,SAASC,EAAkB7E,EAAY8E,GACrC,OAAQA,EAAOrE,MACb,KAAKkE,EAAkBC,mBACrB,O,qVAAO,IACF5E,EADL,eAEG8E,EAAOC,eAAiBD,EAAOE,kBAOxC,IAAMC,EAAkB,SAACF,EAAwBC,GAAzB,MAAuD,CAAEvE,KAAMkE,EAAkBC,mBAAoBG,iBAAgBC,mBAIvIE,GAA2B,mBAC9BjC,EAAWzF,eAAiB,IADE,cAE9ByF,EAAWxF,YAAc,IAFK,cAG9BwF,EAAWzF,eAAiB,IAHE,cAI9ByF,EAAWxF,YAAc,IAJK,cAK9BwF,EAAWtF,KAAO,IALY,cAM9BsF,EAAWrF,OAAS,IANU,cAO9BqF,EAAWpF,YAAc,IAPK,cAQ9BoF,EAAWnF,IAAM,IARa,cAS9BmF,EAAWlF,KAAO,IATY,cAU9BkF,EAAWrE,cAAgB,IAVG,cAW9BqE,EAAWvF,aAAe,IAXI,GAsNlByH,GA7KMzE,IAAKC,OACxB,CAAEhD,KAAM,iBADW+C,CAEjBX,YAJyD,SAACC,GAAD,MAAY,CAAEoF,cAAepF,EAAMoF,cAAenF,KAAMD,EAAME,UAAUD,OAZnE,SAACM,EAAU8E,GAAX,MAAyB,CACzFC,kBADyF,SACvE9D,EAAY+D,GAC5BhF,EX/DqE,CAAEE,KAAMzC,EAAkCwH,UW+DxFhE,EX/DmGiE,WW+D/FF,KAE7BG,uBAJyF,SAIlEC,GACrBpF,EXhEqC,SAACoF,GAAD,MAAoB,CAAElF,KAAMzC,EAAmC2H,YWgE3FC,CAA0BD,KAErCE,YAPyF,WAQvFtF,EXjEiC,CAAEE,KAAMzC,OWyEzC+B,CAA6Ca,YAAW,YAC8G,IAApKX,EAAmK,EAAnKA,KAAMmF,EAA6J,EAA7JA,cAAeE,EAA8I,EAA9IA,kBAAmBO,EAA2H,EAA3HA,YAAaH,EAA8G,EAA9GA,uBAA8G,IAAtF7E,KAAQU,EAA8E,EAA9EA,kBAAmBF,EAA2D,EAA3DA,eAAgBU,EAA2C,EAA3CA,eAAkBlB,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,QAAmB,EAEvHgF,qBAAWjB,EAAmBK,GAFyF,mBAEhKa,EAFgK,KAE/IC,EAF+I,OAG/GF,qBAAWjB,EAAmBK,GAHiF,mBAGhKe,EAHgK,KAG3IC,EAH2I,OAIvInF,mBAAS9C,EAAQgC,IAJsH,mBAIhKiB,EAJgK,KAItJC,EAJsJ,KAMvKC,oBAAU,WACRD,EAAYlD,EAAQgC,KACnB,CAACA,IACJmB,oBAAU,WAER,OADA+E,OAAOC,iBAAiB,UAAWC,GAC5B,kBAAMF,OAAOG,oBAAoB,UAAWD,KAClD,IAEHjF,oBAAU,YA1Cc,SAACmF,EAAcC,GACvC,GAAI/C,OAAOC,KAAK6C,GAASE,SAAWhD,OAAOC,KAAK8C,GAASC,OACvD,OAAO,EACT,cAAyBhD,OAAOiD,QAAQH,GAAxC,eAAkD,CAAC,IAAD,0BAAxC5C,EAAwC,KAAnC4B,EAAmC,KAChD,GAAIiB,EAAQ7C,KAAS4B,EACnB,OAAO,EAEX,OAAO,GAoCDoB,CAAkB5E,IAAkBqD,IAExC/D,EAAe+D,IACd,CAACA,EAAe/D,EAAgBU,IAEnC,IAAM6E,EAAgBC,sBAAY,SAACrF,EAAY+D,GAC7CD,EAAkB9D,EAAI+D,IACrB,CAACD,IAEEwB,EAAeD,sBAAY,SAACE,EAAavF,GAE7C,GADAkE,EAAuB3D,KAClBgE,EAAgBvE,GAAIiF,OAKvBP,EAAyBjB,EAAgBzD,EAAIuE,EAAgBvE,GAAIwF,OAAO,SAAClD,GAAD,OAAkBA,GAAQA,EAAKmD,WAAWF,WALnF,CAC/B,IAAMG,EAAU5J,EAAOC,UAAUsG,IAAI,gBAAS0B,EAAT,EAAI/D,GAAJ,OAA2B+D,GAASA,EAAM4B,aAC/EnB,EAAqBf,EAAgBzD,EAAI0F,IACzChB,EAAyBjB,EAAgBzD,EAAI0F,EAAQF,OAAO,SAAClD,GAAD,OAAkBA,GAAQA,EAAKmD,WAAWF,SAIvG,CAACrB,EAAwB3D,EAAgBgE,EAAiBC,EAAsBE,IAE7EkB,EAAWP,sBAAY,WAC3BhG,EAAKe,eAAe,SAACC,GACdA,GACHf,EAAQQ,KAAR,UAAgB3B,EAAhB,eAGH,CAACkB,EAAMC,IAEJuG,EAAmBR,sBAAY,WACnCxF,EAAe0C,GACf8B,KACC,CAACxE,EAAgBwE,IAEdyB,EAAeT,sBAAY,SAACnF,GAChCA,EAAEC,iBACFyF,KACC,CAACA,IAEEf,EAAgBQ,sBAAY,SAACnF,GACnB,WAAVA,EAAEiC,IACJ0D,IACmB,OAAV3F,EAAEiC,KACXyD,KAED,CAACC,EAAkBD,IAEhBG,EAAkBV,sBAAY,SAACrF,EAAY+D,GAC/C,IA5FoBiC,EAAiB/B,EA4F/BgC,GA5FcD,EA4FYhG,EA5FKiE,EA4FDF,EA5FwBjI,EAAOC,UAAUmK,KAAK,SAACD,GAAD,OAAmBA,EAASD,IAAY/B,KA6FtHgC,IACFpG,EAAeoG,GACf/B,EAAuB+B,KAExB,CAACpG,EAAgBqE,IAEpB,OACE,6BACE,kBAAC,IAAD,eAAMjE,SAAU6F,EAAcK,UAAWtB,GAAoBlC,GAC3D,kBAAC,IAAD,CAAMhC,MAAO,CAAEyF,MAAO,MAAOC,SAAU,UACvC,kBAAC,IAAKxF,KAAN,CAAWyF,MAAO5G,EAAS1D,gBACxB+D,EAAkB0B,EAAWzF,eAAgB,CAC5C8E,MAAO,CACL,CAAEC,UAAU,EAAMC,QAAS,wHAC3B,CAAEC,QAAS,SAAUD,QAAS,gIAHjCjB,CAMC,kBAAC,IAAD,CACEwG,WAAY9B,EAAoBhD,EAAWzF,gBAC3CwK,SAAU,SAACjB,GAAD,OAASD,EAAaC,EAAK9D,EAAWzF,iBAChDyK,SAAU,SAAC1C,GAAD,OAAWgC,EAAgBtE,EAAWzF,eAAgB+H,KAEhE,kBAAC,IAAD,CAAOoC,UAAWtB,EAAe6B,UAAW,EAAG1G,GAAIyB,EAAWzF,oBAGpE,kBAAC,IAAK6E,KAAN,CAAWyF,MAAO5G,EAASzD,aACxB8D,EAAkB0B,EAAWxF,YAAa,CACzC6E,MAAO,CACL,CAAEC,UAAU,EAAMC,QAAS,yKAC3B,CAAEC,QAAS,SAAUD,QAAS,gIAHjCjB,CAMC,kBAAC,IAAD,CACEwG,WAAY9B,EAAoBhD,EAAWxF,aAC3CuK,SAAU,SAACjB,GAAD,OAASD,EAAaC,EAAK9D,EAAWxF,cAChDwK,SAAU,SAAC1C,GAAD,OAAWgC,EAAgBtE,EAAWxF,YAAa8H,KAE7D,kBAAC,IAAD,CAAOoC,UAAWtB,EAAe3D,WAAW,EAAMwF,UAAW,GAAI1G,GAAIyB,EAAWxF,iBAGtF,kBAAC,IAAK4E,KAAN,CAAWyF,MAAO5G,EAASvD,MACxB4D,EAAkB0B,EAAWtF,KAAM,CAClC2E,MAAO,CACL,CAAEC,UAAU,EAAMC,QAAS,8GAF9BjB,CAKC,kBAAC,IAAD,CACEwG,WAAY9B,EAAoBhD,EAAWtF,MAC3CqK,SAAU,SAACjB,GAAD,OAASD,EAAaC,EAAK9D,EAAWtF,OAChDsK,SAAU,SAAC1C,GAAD,OAAWgC,EAAgBtE,EAAWtF,KAAM4H,KAEtD,kBAAC,IAAD,CAAOoC,UAAWtB,EAAgB6B,UAAW,GAAI1G,GAAIyB,EAAWtF,UAGtE,kBAAC,IAAK0E,KAAN,CAAWyF,MAAO5G,EAASnD,MACxBwD,EAAkB0B,EAAWlF,KAAM,CAClCuE,MAAO,CACL,CAAEC,UAAU,EAAMC,QAAS,sIAF9BjB,CAIE,kBAAC,IAAD,CAAOoG,UAAWtB,EAAgB6B,UAAW,GAAI1G,GAAIyB,EAAWlF,SAErE,kBAAC,IAAKsE,KAAN,CAAWyF,MAAO5G,EAAStD,QACxB2D,EAAkB0B,EAAWrF,OAAQ,CACpC0E,MAAO,CACL,CAAEC,UAAU,EAAMC,QAAS,gIAF9BjB,CAIE,kBAAC,IAAD,CAAOoG,UAAWtB,EAAgB6B,UAAW,GAAI1G,GAAIyB,EAAWrF,WAErE,kBAAC,IAAKyE,KAAN,CAAWyF,MAAO5G,EAASrD,aACxB0D,EAAkB0B,EAAWpF,YAAa,CACzCyE,MAAO,CACL,CAAEC,UAAU,EAAMC,QAAS,sGAC3B,CAAEC,QAAS,SAAUD,QAAS,gIAHjCjB,CAKE,kBAAC,IAAD,CAAOoG,UAAWtB,EAAgB6B,UAAW,EAAG1G,GAAIyB,EAAWpF,gBAEpE,kBAAC,IAAKwE,KAAN,CAAWyF,MAAO5G,EAASpD,KACxByD,EAAkB0B,EAAWnF,IAAK,CACjCwE,MAAO,CACL,CAAEC,UAAU,EAAMC,QAAS,oIAC3B,CAAEC,QAAS,SAAUD,QAAS,gIAHjCjB,CAKE,kBAAC,IAAD,CAAOoG,UAAWtB,EAAgB6B,UAAW,EAAG1G,GAAIyB,EAAWnF,QAEpE,kBAAC,IAAKuE,KAAN,CAAWyF,MAAO5G,EAAStC,eAC1B2C,EAAkB0B,EAAWrE,cAA7B2C,CACC,kBAAC,IAAD,CAAOoG,UAAWtB,EAAgB6B,UAAW,GAAI1G,GAAIyB,EAAWrE,kBAElE,kBAAC,IAAKyD,KAAN,CAAWyF,MAAO5G,EAASxD,cAC1B6D,EAAkB0B,EAAWvF,aAA7B6D,CACC,kBAAC,IAAD,CAAQ4G,SAAU,SAAC5C,GAAD,OAAmBqB,EAAc3D,EAAWvF,aAAc6H,IAAQ/D,GAAIyB,EAAWvF,cAChGwF,EAAaW,IAAI,SAAA0B,GAAK,OAAI,kBAACtB,EAAD,CAAQN,IAAK4B,EAAOA,MAAOA,GAAQA,SAIpE,kBAAC,IAAD,MACA,yBAAKpD,MAAO,CAAEiG,QAAS,OAAQC,SAAU,aAAcC,eAAgB,kBACrE,kBAAC,IAAD,CAAQ7H,KAAK,SAAS8H,KAAK,QAAQC,QAASnB,GAAmBnG,EAASrC,MAAxE,UACA,kBAAC,IAAKwD,KAAN,KACE,kBAAC,IAAD,CAAQW,SAAS,SAASvC,KAAK,UAAU8H,KAAK,SAASrH,EAASpC,UAAhE,iBC1PF2J,GAA2BC,IAA3BD,OAAQE,GAAmBD,IAAnBC,QAASC,GAAUF,IAAVE,MACjBC,GAAShJ,IAATgJ,KAmHKC,GAAW/I,YAjB8D,SAACC,GACrF,MAAO,CACLoF,cAAepF,EAAMoF,cACrBnF,KAAMD,EAAME,UAAUD,KACtBI,SAAUL,EAAMI,KAAKE,OAIuE,SAACC,GAAD,MAAe,CAC7GwI,eAD6G,WAE3GxI,EZrG6C,CAAEE,KAxBxB,iBY+HzBuI,WAJ6G,SAIlG/I,GACTM,EZ5G8C,SAACN,GAAD,MAAW,CAAEQ,KAtBhC,kBAsBuDR,QY4GzEgJ,CAAehJ,OAIJF,CAGtBa,YAlHe,SAAC,GAA4E,IAA1EX,EAAyE,EAAzEA,KAAMI,EAAmE,EAAnEA,SAAU0I,EAAyD,EAAzDA,eAAgBC,EAAyC,EAAzCA,WAAYlI,EAA6B,EAA7BA,QAA6B,EAC3DC,mBAAS9C,EAAQgC,IAD0C,mBACpFiB,EADoF,KAC1EC,EAD0E,OAEzDJ,oBAAS,GAFgD,mBAEpFmI,EAFoF,KAEzEC,EAFyE,KAI3F/H,oBAAU,WACRD,EAAYlD,EAAQgC,KACnB,CAACA,EAAMkB,IAEVC,oBAAU,WACRD,EAAYlD,EAAQgC,KACnB,CAACA,IAEJ,IAAMlB,EAAS8H,sBAAY,SAACnF,GAC1BqH,IACAjI,EAAQQ,KAAR,UAAgB3B,EAAhB,OACC,CAACoJ,EAAgBjI,IAEdsI,EAAmBvC,sBAAY,SAACnF,GAAyB,IAC3C6D,EAAY7D,EAAtB2H,OAAU9D,MAClByD,EAAWzD,IACV,CAACyD,IAEEM,EAAiBzC,sBAAY,SAACqC,GAClCC,EAAaD,IACZ,CAACC,IAEJ,OACE,kBAAC,IAAD,CAAQhH,MAAO,CAAEoH,UAAW,UAC1B,kBAACX,GAAD,CAAOY,aAAW,EAACC,WAAYH,EAAgBI,MAAM,QAAQvH,MAAO,CACpEwH,SAAU,OACVC,OAAQ,QACRC,KAAM,IAEJ,yBAAK7H,UAAU,QACb,kBAAC,IAAD,CAAMG,MAAO,CAACyH,OAAQ,SAAUE,oBAAqB,CAAC,KAAMC,KAAK,UAC/D,kBAAC,IAAK1H,KAAN,CAAW2H,UAAQ,GACjB,kBAAC,IAAD,CAAMvJ,KAAK,SACTyI,GAAa,kBAAC,IAAMe,MAAP,CAAa1E,MAAOtF,EAAMkI,SAAUiB,GACjD,kBAAC,IAAMc,OAAP,CAAc3E,MAAM,MAApB,MACA,kBAAC,IAAM2E,OAAP,CAAc3E,MAAM,MAApB,QAGJ,kBAAC,IAAKlD,KAAN,CAAWsB,IAAI,IAAI6E,QAASzJ,EAAQiD,UAAU,iBAC5C,kBAAC,IAAD,CAAMvB,KAAK,WACX,8BAAOS,EAASnC,SAElB,kBAAC,IAAKsD,KAAN,CAAWsB,IAAI,KACb,kBAAC,IAAD,CAAMlD,KAAK,UACX,8BAAOS,EAASlC,WAElB,kBAAC,IAAKqD,KAAN,CAAWsB,IAAI,KACb,kBAAC,IAAD,CAAMlD,KAAK,kBACX,8BAAOS,EAASjC,YAElB,kBAAC,IAAKoD,KAAN,CAAWsB,IAAI,KACb,kBAAC,IAAD,CAAMlD,KAAK,cACX,8BAAOS,EAAShC,iBAElB,kBAAC,IAAKmD,KAAN,CAAWsB,IAAI,KACb,kBAAC,IAAD,CAAMlD,KAAK,QACX,8BAAOS,EAAS/B,aAElB,kBAAC,IAAKkD,KAAN,CAAWsB,IAAI,KACb,kBAAC,IAAD,CAAMlD,KAAK,cACX,8BAAOS,EAAS9B,SAElB,kBAAC,IAAKiD,KAAN,CAAWsB,IAAI,KACb,kBAAC,IAAD,CAAMlD,KAAK,YACX,8BAAOS,EAAS7B,WAElB,kBAAC,IAAKgD,KAAN,CAAWsB,IAAI,KACb,kBAAC,IAAD,CAAMlD,KAAK,oBACX,8BAAOS,EAAS5B,QAGpB,kBAACuJ,GAAD,CAAM1G,MAAO,CAAEC,UAAW,SAAU+H,cAAe,OAAQC,YAAa,sBAAwB/J,KAGpG,kBAAC,IAAD,KACE,kBAACoI,GAAD,CAAQtG,MAAO,CAAEkI,WAAY,OAAQC,UAAW,OAAQV,OAAQ,OAAQxB,QAAS,OAAQC,SAAU,aAAcC,eAAgB,iBAC/H,kBAAC,IAAD,CAAQ7H,KAAK,SAAS8H,KAAK,SAASrH,EAAS1C,aAC7C,kBAAC,IAAD,CAAQiC,KAAK,SAAS8H,KAAK,SAASrH,EAASzC,YAC7C,kBAAC,IAAD,CAAQgC,KAAK,SAAS8H,KAAK,SAASrH,EAASxC,OAC7C,kBAAC,IAAD,CAAQ+B,KAAK,SAAS8H,KAAK,SAASrH,EAASvC,eAE/C,kBAAC,IAAD,MACA,kBAACgK,GAAD,CAASxG,MAAO,CAAEoI,OAAQ,SAAUF,WAAY,YAC9C,kBAAC,GAAD,Y,UCzFJG,I,OAAO,CACX,CACE7G,IAAK,EACLnE,QAAS,EACTD,SAAU,GACVE,YAAa,QACbC,MAAO,GACP+K,SAAU,CACR,CACE9G,IAAK,GACL+G,cAAe,EACflL,QAAS,GACTC,YAAa,QACbC,MAAO,IAET,CACEiE,IAAK,GAEL+G,cAAe,EACflL,QAAS,GACTC,YAAa,QACbC,MAAO,IAET,CACEiE,IAAK,GAEL+G,cAAe,EACflL,QAAS,GACTC,YAAa,QACbC,MAAO,MAIb,CACEiE,IAAK,EACLnE,QAAS,EACTD,SAAU,GACVE,YAAa,QACbC,MAAO,GACP+K,SAAU,CACR,CACE9G,IAAK,GAEL+G,cAAe,EACflL,QAAS,GACTC,YAAa,QACbC,MAAO,IAET,CACEiE,IAAK,GAEL+G,cAAe,EACflL,QAAS,GACTC,YAAa,QACbC,MAAO,IAET,CACEiE,IAAK,GACL+G,cAAe,EACflL,QAAS,GACTC,YAAa,QACbC,MAAO,QAaTiL,GAA0C,CAC9CxC,SAAU,SAACyC,EAAiBC,GAC1BC,QAAQC,IAAR,2BAAgCH,GAAmB,iBAAkBC,IAEvE5C,SAAU,SAAC+C,EAAQC,EAAUJ,GAC3BC,QAAQC,IAAI,aAActH,OAAOiD,QAAQsE,GAASC,EAAUJ,IAE9DK,YAAa,SAACD,EAAUJ,EAAcM,GACpCL,QAAQC,IAAI,gBAAiBE,EAAUJ,EAAcM,KAyIzD,IAuCepL,eAvC+D,SAACC,EAAOoL,GACpF,MAAO,CACLC,aAAcrL,EAAMqL,aACpBpL,KAAMD,EAAME,UAAUD,OAa8D,SAACM,EAAU6K,GACjG,MAAO,CACLE,WADK,SACM9L,EAAiBC,EAAqBC,GAC/Ca,EbjOyB,SAACf,EAAiBC,EAAqBC,GAAvC,MAC5B,CAAEe,KAAMpD,EAAoBkO,oBAAqB/L,UAASC,cAAaC,SagO3D8L,CAAiBhM,EAASC,EAAaC,KAElD+L,YAJK,SAIOC,EAAwBC,EAAyBC,EAAsBC,GACjFtL,EbjOoC,SAACmL,EAAwBC,EAAyBC,EAAsBC,GAAxE,MACvC,CAAEpL,KAAMpD,EAAoByO,gCAAiCJ,iBAAgBC,kBAAiBC,eAAcC,iBagOhGE,CAA2BL,EAAgBC,EAAiBC,EAAcC,KAErFG,iBAPK,SAOYN,GACfnL,Eb3N0C,SAACmL,GAAD,MAA6B,CAAEjL,KAAMpD,EAAoB4O,sCAAuCP,kBa2NjIQ,CAAiCR,KAE5CS,iBAVK,SAUYT,GACfnL,Eb5N0C,SAACmL,GAAD,MAA6B,CAAEjL,KAAMpD,EAAoB+O,sCAAuCV,kBa4NjIW,CAAiCX,KAE5CY,kBAbK,SAaaZ,EAAwBC,GACxCpL,Eb7N8C,SAACmL,EAAwBC,GAAzB,MACjD,CAAElL,KAAMpD,EAAoBkP,0CAA2Cb,iBAAgBC,mBa4N3Ea,CAAqCd,EAAgBC,KAEhEc,kBAhBK,SAgBaf,EAAwBC,GACxCpL,Eb7N+C,SAACmL,EAAwBC,GAAzB,MAClD,CAAElL,KAAMpD,EAAoBqP,0CAA2ChB,iBAAgBC,mBa4N3EgB,CAAqCjB,EAAgBC,OAKrD5L,CAvKf,YAAqJ,IAArIsL,EAAoI,EAApIA,aAAcpL,EAAsH,EAAtHA,KAAMqL,EAAgH,EAAhHA,WAAYG,EAAoG,EAApGA,YAAkDgB,GAAkD,EAAvFH,kBAAuF,EAApEN,iBAAoE,EAAlDS,mBAAmBN,EAA+B,EAA/BA,iBAA+B,EAC1HpL,mBAAS,YADiH,gCAElHA,mBAAS9C,EAAQgC,KAFiG,mBAE3IiB,EAF2I,aAGlHH,mBAASyJ,KAHyG,mBAG3IoC,EAH2I,KAK5IC,GAL4I,KAKhIhG,sBAAY,SAACrH,EAAiBkL,GAC9C,OAAO,SAAChJ,GACN,GAAIgJ,EAAe,CACjB,IAAMoC,EAAUF,EAASlF,KAAK,qBAAGlI,UAAiDkL,IAClF,GAAIoC,GAAWA,EAAQrC,SAAU,CAC/B,IAAMsC,EAAWD,EAAQrC,SAAS/C,KAAK,qBAAGlI,UAAiDA,IAC3F,GAAIuN,EAAU,CAAC,IACLtN,EAAwBsN,EAAxBtN,YAAcC,EAAUqN,EAAVrN,MACtB+L,EAAYf,EAAelL,EAASC,EAAaC,SAGhD,CACL,IAAMqN,EAAWH,EAASlF,KAAK,qBAAGlI,UAAiDA,IACnF,GAAIuN,EAAU,CAAC,IACLtN,EAAuBsN,EAAvBtN,YAAaC,EAAUqN,EAAVrN,MACrB4L,EAAW9L,EAASC,EAAaC,OAItC,CAACkN,EAAUnB,EAAaH,KAErB0B,EAAoBnG,sBAAY,SAACrH,EAAiBkL,GACtD,OAAO,SAAChJ,GACFgJ,EACF+B,EAAkB/B,EAAelL,GAEjC2M,EAAiB3M,KAGpB,CAACoN,EAAUnB,EAAaH,IAErB2B,EAAiBpG,sBAAY,SAACrH,EAAiBkL,GACnD,OAAO,SAAChJ,MAGP,CAACkL,EAAUnB,EAAaH,IACrB4B,EAAW,CACf,CACEC,MAAOjM,EAAS1B,QAChB4N,UAAW,UACXzJ,IAAK,WAEP,CACEwJ,MAAOjM,EAAS3B,SAChB6N,UAAW,WACXzJ,IAAK,WACLiE,MAAO,OAET,CACEuF,MAAOjM,EAASzB,YAChB2N,UAAW,cACXxF,MAAO,MACPjE,IAAK,eAEP,CACEwJ,MAAOjM,EAASxB,MAChB0N,UAAW,QACXxF,MAAO,MACPjE,IAAK,SAEP,CACEA,IAAK,SACLwJ,MAAO,SACPE,OAAQ,YAA6E,IAA1E3C,EAAyE,EAAzEA,cAAelL,EAA0D,EAA1DA,QACxB,OACE,yBAAKmE,IAAK+G,EAAgB,IAAMlL,GAC9B,kBAAC,IAAD,CAAMiB,KAAK,eAAe+H,QAASyE,EAAezN,EAASkL,KAC3D,kBAAC,IAAD,CAAMjK,KAAK,eAAe+H,QAASwE,EAAkBxN,EAASkL,KAC9D,kBAAC,IAAD,CAAMjK,KAAK,cAAc+H,QAASqE,EAAUrN,EAASkL,SAMzD4C,EAAW,CACf,CACEH,MAAOjM,EAAS1B,QAChB4N,UAAW,UACXzJ,IAAK,WAEP,CACEwJ,MAAOjM,EAAS3B,SAChB6N,UAAW,WACXzJ,IAAK,WACLiE,MAAO,OAET,CACEuF,MAAOjM,EAASzB,YAChB2N,UAAW,cACXxF,MAAO,MACPjE,IAAK,eAEP,CACEwJ,MAAOjM,EAASxB,MAChB0N,UAAW,QACXxF,MAAO,MACPjE,IAAK,SAEP,CACEA,IAAK,SACLwJ,MAAO,SACPE,OAAQ,YAA6E,IAA1E3C,EAAyE,EAAzEA,cAAelL,EAA0D,EAA1DA,QACxB,OACE,yBAAKmE,IAAKnE,EAAU,IAAMkL,GACxB,kBAAC,IAAD,CAAMjK,KAAK,eAAe+H,QAASwE,EAAkBxN,EAASkL,KAC9D,kBAAC,IAAD,CAAMjK,KAAK,cAAc+H,QAASqE,EAAUrN,EAASkL,SAK/D,OACE,yBAAK1I,UAAU,QACb,kBAAC,KAAD,CAAOA,UAAU,oBAAoBuL,sBAAoB,EAACC,QAASN,EAAUvC,aAAcA,GAAc5C,WAAYsD,IACrH,kBAAC,KAAD,CAAOrJ,UAAU,uBAAuBuL,sBAAoB,EAACC,QAASF,EAAU3C,aAAcA,GAAc5C,WAAYyC,Q,SCtOjHiD,GAAWC,aAAgB,CAAExN,UJejB,WAAqE,IAApEF,EAAmE,uDAA3C,CAAEC,KAAM,MAAQ6E,EAA2B,uCAC3F,OAAQA,EAAOrE,MACb,IVjB2B,kBUkBzB,MAAO,CAAER,KAAM6E,EAAO7E,MAExB,QAAS,OAAOD,IIpBiCI,KJwBjC,WAAoE,IAAnEJ,EAAkE,uDAA/C,CAAEM,KAAM,GAAIH,KAAM,IAAM2E,EAAuB,uCACrF,OAAQA,EAAOrE,MACb,IVzBoB,WUyBJ,IACNH,EAAewE,EAAfxE,KAAMH,EAAS2E,EAAT3E,KACd,MAAO,CAAEG,OAAMH,QAEjB,IV5BuB,cU6BrB,OAAO,KACFH,EADL,CAEEM,KAAM,KAGV,QAAS,OAAON,IIpCuCoF,cJsD9B,WAAmF,IAAlFpF,EAAiF,uDAAtD+D,EAAsBe,EAAgC,uCAC7G,OAAQA,EAAOrE,MACb,KAAKzC,EACH,OAAO,KACFgC,EADL,eAEG8E,EAAOU,UAAYV,EAAOW,aAG/B,KAAKzH,EAEH,IADA,IAAM2H,EAAQ,KAAQ3F,GACtB,MAAyByD,OAAOiD,QAAQ5B,EAAOa,UAA/C,eAA0D,CAAC,IAAD,0BAAhDhC,EAAgD,KAA3C4B,EAA2C,KACxDI,EAAShC,GAAO4B,EAElB,OAAOI,EAET,KAAK3H,EACH,OAAO,KAAK+F,GAEd,QACE,OAAO/D,IIzE6DqL,aJ+E9C,WAAsF,IAArFrL,EAAoF,uDAAzDgE,EAA0Bc,EAA+B,uCAC/G,OAAQA,EAAOrE,MAEb,KAAKpD,EAAoBkO,oBAAsB,IACrC/L,EAAgCsF,EAAhCtF,QAASC,EAAuBqF,EAAvBrF,YAAaC,EAAUoF,EAAVpF,MACxBiG,EAAWxC,EAASnD,GAEpB2N,EAAehI,EAASiI,UAAU,qBAAGpO,UAAmDA,IAC9F,IAAsB,IAAlBmO,EAAqB,CACvB,IAAME,EAAelI,EAASgI,GAAcpO,SAC5CoG,EAASgI,GAAT,KAA8BhI,EAASgI,GAAvC,CAAsDpO,SAAUsO,EAAe,SAE/ElI,EAASrE,KAAK,CAAE9B,UAASC,cAAaC,QAAOH,SAAU,IAEzD,OAAOoG,EAGT,KAAKtI,EAAoByO,gCAAkC,IACjDJ,EAAiE5G,EAAjE4G,eAAgBC,EAAiD7G,EAAjD6G,gBAAiBC,EAAgC9G,EAAhC8G,aAAcC,EAAkB/G,EAAlB+G,cACjDlG,EAAWxC,EAASnD,GACpB8N,EAAsBnI,EAASiI,UAAU,qBAAGpO,UAA0BkM,IAC5E,IAA6B,IAAzBoC,EAA4B,CAC9B,IAAMC,EAAepI,EAASmI,GAAqBrD,SACnD,GAAIsD,EAAc,CAChB,IAAMC,EAAuBD,EAAaH,UAAU,qBAAGpO,UAA0BmM,IACjF,IAA8B,IAA1BqC,EACFD,EAAaC,GAAsBzO,SAAWwO,EAAaC,GAAsBzO,SAAW,MACvF,CACL,IAAM0O,EAAmBtI,EAASmI,GAAqBrD,SAErD9E,EAASmI,GAAqBrD,cADPyD,IAArBD,EACF,sBAA8CA,GAA9C,CAAiE,CAAEzO,QAASmM,EAAiBlM,YAAamM,EAAclM,MAAOmM,EAAetM,SAAU,KAE/G,CAAC,CAAEC,QAASmM,EAAiBlM,YAAamM,EAAclM,MAAOmM,EAAetM,SAAU,UAIrIoG,EAASmI,GAAqBrD,SAAW,CAAC,CAAEjL,QAASmM,EAAiBlM,YAAamM,EAAclM,MAAOmM,EAAetM,SAAU,IAGrI,OAAOoG,EAGT,KAAKtI,EAAoB8Q,yBAA2B,IACxCzC,EAAmB5G,EAAnB4G,eACF/F,EAAWxC,EAASnD,GAC1B,OAAO2F,EAASqB,OAAO,qBAAGxH,UAA0BkM,IAGxD,KAAKrO,EAAoB+Q,qCAAuC,IACtD1C,EAAoC5G,EAApC4G,eAAgBC,EAAoB7G,EAApB6G,gBAClBhG,EAAWxC,EAASnD,GACpBqO,EAAe1I,EAASiI,UAAU,qBAAGpO,UAA0BkM,IACrE,IAAsB,IAAlB2C,EAAqB,CACvB,IAAMC,EAAY3I,EAAS0I,GAAc5D,SACrC6D,IACF3I,EAAS0I,GAAc5D,SAAW6D,EAAUtH,OAAO,qBAAGxH,UAA0BmM,KAGpF,OAAOhG,EAGT,KAAKtI,EAAoB4O,sCAAwC,IACvDP,EAAmB5G,EAAnB4G,eACF/F,EAAWxC,EAASnD,GACpBqO,EAAe1I,EAASiI,UAAU,qBAAGpO,UAA0BkM,IAIrE,OAHsB,IAAlB2C,IACF1I,EAAS0I,GAAT,KAA8B1I,EAAS0I,GAAvC,CAAsD9O,SAAUoG,EAAS0I,GAAc9O,SAAW,KAE7FoG,EAGT,KAAKtI,EAAoB+O,sCAAwC,IACvDV,EAAmB5G,EAAnB4G,eACF/F,EAAWxC,EAASnD,GACpBqO,EAAe1I,EAASiI,UAAU,qBAAGpO,UAA0BkM,IACrE,IAAsB,IAAlB2C,EAAqB,CACvB,IAAME,EAAkB5I,EAAS0I,GAAc9O,SAC3CgP,EAAkB,EACpB5I,EAAS0I,GAAT,KAA8B1I,EAAS0I,GAAvC,CAAsD9O,SAAUgP,EAAkB,IAElF5I,EAAS6I,OAAOH,EAAc,GAIlC,OADAvD,QAAQC,IAAIpF,GACLA,EAGT,KAAKtI,EAAoBkP,0CAA4C,IAC3Db,EAAoC5G,EAApC4G,eAAgBC,EAAoB7G,EAApB6G,gBAClBhG,EAAWxC,EAASnD,GACpBqO,EAAe1I,EAASiI,UAAU,gBAAGpO,EAAH,EAAGA,QAAH,OAAiBkM,IAAmBlM,IAC5E,IAAsB,IAAlB6O,EAAqB,CACvB,IAAMC,EAAY3I,EAAS0I,GAAc5D,SACzC,GAAI6D,EAAW,CACb,IAAMG,EAAgBH,EAAUV,UAAU,qBAAGpO,UAA0BmM,IACvE,IAAuB,IAAnB8C,EAAsB,CACxB,IAAM1B,EAAWuB,EAAUG,GAC3BH,EAAUG,GAAV,KAAgC1B,EAAhC,CAA0CxN,SAAUwN,EAASxN,SAAW,MAI9E,OAAOoG,EAGT,KAAKtI,EAAoBqP,0CAA4C,IAC3DhB,EAAoC5G,EAApC4G,eAAgBC,EAAoB7G,EAApB6G,gBAClBhG,EAAWxC,EAASnD,GACpBqO,EAAe1I,EAASiI,UAAU,gBAAGpO,EAAH,EAAGA,QAAH,OAAiBkM,IAAmBlM,IAC5E,IAAsB,IAAlB6O,EAAqB,CACvB,IAAMC,EAAY3I,EAAS0I,GAAc5D,SACzC,GAAI6D,EAAW,CACb,IAAMG,EAAgBH,EAAUV,UAAU,qBAAGpO,UAA0BmM,IACvE,IAAuB,IAAnB8C,EAAsB,CACxB,IAAM1B,EAAWuB,EAAUG,GACvB1B,EAASxN,SAAW,EACtB+O,EAAUG,GAAV,KAAgC1B,EAAhC,CAA0CxN,SAAUwN,EAASxN,SAAW,IAExE+O,EAAUE,OAAOC,EAAe,KAKxC,OAAO9I,EAET,QACE,OAAO3F,MI3MP0O,GAAeC,KAAKC,MAAMC,aAAaC,QAAQ,gBACjDC,GAAQL,GAAeM,aAAYvB,GAAUiB,IAAgBM,aAAYvB,IAE7EsB,GAAME,UAAU,kBAAMJ,aAAaK,QAAQ,cAAeP,KAAKQ,UAAUJ,GAAMK,eAEhEL,UCMfM,IAAShC,OACP,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAU0B,MAAOA,IACf,kBAAC,IAAD,CAAOO,KAAI,UAAK3P,EAAL,SAAsB4P,UAAWzG,KAC5C,kBAAC,IAAD,CAAOwG,KAAI,UAAK3P,EAAL,eAA4B6P,OAAK,EAACD,UAAWzP,IACxD,kBAAC,IAAD,CAAOwP,KAAI,UAAK3P,EAAL,KAAkB6P,OAAK,EAACD,UAAWzP,IAC9C,kBAAC,IAAD,CAAOwP,KAAI,UAAK3P,EAAL,WAAwB4P,UAAWE,OAGlDC,SAASC,eAAe,W","file":"static/js/main.dee65abf.chunk.js","sourcesContent":["import { changeLanguageType, addUserType, logoutUserType } from './actionsTypes';\nimport { number } from 'prop-types';\n\nexport const CHANGE_LANGUAGE = 'CHANGE_LANGUAGE';\nexport const ADD_USER = 'ADD_USER';\nexport const LOGOUT_USER = 'LOGOUT_USER';\n\nexport const formDataActions = {\n  ADD_TO_FORM_DATA: 'ADD_TO_FORM_DATA',\n  UPDATE_ALL_FIELDS: 'UPDATE_ALL_FIELDS',\n  CLEAR_ALL_FIELDS: 'CLEAR_ALL_FIELDS'\n};\n\nexport enum cartProductsActions {\n  ADD_PRODUCT_TO_CART,\n  ADD_ADDITION_TO_PRODUCT_IN_CART,\n  DELETE_PRODUCT_FROM_CART,\n  DELETE_ADDITION_OF_PRODUCT_FROM_CART,\n  INCREMENT_QUANTITY_OF_PRODUCT_IN_CART,\n  DECREMENT_QUANTITY_OF_PRODUCT_IN_CART,\n  INCREMENT_QUANTITY_OF_ADDITION_OF_PRODUCT,\n  DECREMENT_QUANTITY_OF_ADDITION_OF_PRODUCT,\n};\n\n\nexport const changeLanguage: changeLanguageType = (lang) => ({ type: CHANGE_LANGUAGE, lang });\n\nexport const addUser: addUserType = (role, code) => ({ type: ADD_USER, role, code });\n\nexport const logoutUser: logoutUserType = () => ({ type: LOGOUT_USER });\n\nexport const addToFormData = (fieldName: string, fieldValue: string) => ({ type: formDataActions.ADD_TO_FORM_DATA, fieldName, fieldValue });\n\nexport const updateAllFieldsOfFormData = (newState: any) => ({ type: formDataActions.UPDATE_ALL_FIELDS, newState });\n\nexport const clearAllFields = () => ({ type: formDataActions.CLEAR_ALL_FIELDS });\n\nexport const addProductToCart= (article: number, productName: string, price: number) => \n  ({ type: cartProductsActions.ADD_PRODUCT_TO_CART, article, productName, price });\n\nexport const addAdditionToProductInCart = (productArticle: number, additionArticle: number, additionName: string, additionPrice: number) => \n  ({ type: cartProductsActions.ADD_ADDITION_TO_PRODUCT_IN_CART, productArticle, additionArticle, additionName, additionPrice });\n\nexport const deleteProductFromCart = (productArticle: number) => \n  ({ type: cartProductsActions.DELETE_PRODUCT_FROM_CART, productArticle });\n\nexport const deleteAdditionOfProductFromCart = (productArticle: number, additionArticle: number) => \n  ({ type: cartProductsActions.DELETE_ADDITION_OF_PRODUCT_FROM_CART, productArticle, additionArticle });\n\nexport const incrementQuantityOfProductInCart = (productArticle: number) => ({ type: cartProductsActions.INCREMENT_QUANTITY_OF_PRODUCT_IN_CART, productArticle });\n\nexport const decrementQuantityOfProductInCart = (productArticle: number) => ({ type: cartProductsActions.DECREMENT_QUANTITY_OF_PRODUCT_IN_CART, productArticle });\n\nexport const incrementQuantityOfAdditionOfProduct = (productArticle: number, additionArticle: number) => \n  ({ type: cartProductsActions.INCREMENT_QUANTITY_OF_ADDITION_OF_PRODUCT, productArticle, additionArticle });\n\nexport const decrementQuantityOfAdditionOfProduct =  (productArticle: number, additionArticle: number) => \n  ({ type: cartProductsActions.DECREMENT_QUANTITY_OF_ADDITION_OF_PRODUCT, productArticle, additionArticle });\n","const fakeBD = {\n    customers: [\n        {\n            customerNumber: 1\n        },\n        {\n            customerNumber: 2\n        },\n        {\n            customerNumber: 3\n        },\n        {\n            customerNumber: 33,\n            phoneNumber: 89821251216,\n            deliveryCost: '2,50',\n            name: 'Дмитрий',\n            street: 'Уличная',\n            houseNumber: '16',\n            plz: '123456',\n            city: 'Москва',\n        },\n        {\n            customerNumber: 333\n        }\n    ],\n\n};\nexport const auth = (login: string, password: string) => {\n    if (login === 'test' && password === 'test') {\n        return { role: 'admin' };\n    }\n    return null;\n}\n\nexport default fakeBD;\n","import ru from './ru';\nimport de from './de';\n\nexport type langType = 'ru' | 'de';\n\nexport type langMapType = {\n  'ru': typeof ru,\n  'de': typeof de\n};\n\nexport const langMap: langMapType = {\n  'ru': ru,\n  'de': de\n};\n","const ru = {\n    authTitle: 'Авторизация',\n    organizationNumber: 'Номер организации',\n    username: 'Имя пользователя',\n    password: 'Пароль',\n    autoLogin: 'Запомнить меня',\n    login: 'Войти',\n    tableOrders: 'Tischbestellungen', //TODO: Перевод\n    selfPickUp: 'Selbstabholer', //TODO: Перевод\n    sales: 'Hausverkauf', //TODO: Перевод\n    phoneMonitor: 'Telefon monitor', //TODO: Перевод\n    customerNumber: 'Номер клиента',\n    phoneNumber: 'Номер телефона',\n    name: 'Имя',\n    street: 'Улица',\n    houseNumber: 'Номер дома',\n    plz: 'Почтовый индекс',\n    city: 'Город',\n    clientComment: 'Комментарий клиента',\n    deliveryCost: 'Стоимость доставки',\n    clear: 'Очистить',\n    goToOrder: 'Продолжить заказ',\n    logout: 'Выйти',\n    callForm: 'Доставка',\n    allOrders: 'Все заказы',\n    cookingMonitor: 'Монитор кухни',\n    carMonitor: 'Монитор доставки',\n    report: 'Отчет',\n    settings: 'Настройки',\n    help: 'Помощь',\n    quantity: 'Количество',\n    article: 'Артикул',\n    productName: 'Номенклатура',\n    price: 'Цена'\n};\n\nexport default ru;\n","const de = {\n    authTitle: 'Restaurant-Login',\n    organizationNumber: 'Kundennumer',\n    username: 'Benutzername',\n    password: 'Passwort',\n    autoLogin: 'Automatisch Anmelden',\n    login: 'Login',\n    tableOrders: 'Tischbestellungen',\n    selfPickUp: 'Selbstabholer',\n    sales: 'Hausverkauf',\n    phoneMonitor: 'Telefon monitor',\n    customerNumber: 'Kundennummer',\n    phoneNumber: 'Telefonnumer',\n    name: 'Name',\n    street: 'Strasse',\n    houseNumber: 'Hausnummer',\n    plz: 'PLZ',\n    city: 'Stadt',\n    clientComment: 'Bemerkung',\n    deliveryCost: 'Anfahrtskosten',\n    clear: 'Löschen',\n    goToOrder: 'Bestellung',\n    logout: 'Logout',\n    callForm: 'Lieferdienst',\n    allOrders: 'Alle Bestellungen',\n    cookingMonitor: 'Kuchen monitor',\n    carMonitor: 'Fahrer monitor',\n    report: 'Berichten',\n    settings: 'Einstellungen',\n    help: 'Hilfe',\n    quantity: 'Количество',\n    article: 'Артикул',\n    productName: 'Номенклатура',\n    price: 'Цена'\n};\n\nexport default de;\n","export const ROOT_URL = '/pizzaprocloud-ui';\n","import React, { useState, useEffect } from 'react';\nimport { Form, Icon, Input, Button, Checkbox, Typography, Alert } from 'antd';\nimport { connect, MapDispatchToPropsFunction, MapStateToProps } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { RouteComponentProps } from 'react-router';\n\nimport './Auth.css';\n\nimport { auth } from '../../fakeBD';\n\nimport { addUser } from '../../redux/actions';\n\nimport { LoginFormProps, LoginFormOwnProps, LoginFormDispatchProps, LoginFormStateProps, LoginFormValues } from './types';\nimport { State } from '../../redux/types';\n\nimport { langMap } from '../../lang';\nimport { FormComponentProps } from 'antd/es/form';\n\nimport { ROOT_URL } from '../../constants/rootUrl';\n\nconst { Title } = Typography;\n\nexport const LoginForm = ({ form, history, lang, addUser, code, userRole }: LoginFormProps) => {\n  const [errMsg, setErrMsg] = useState('');\n  const [language, setLanguage] = useState(langMap[lang]);\n\n  useEffect(() => form.setFieldsValue({ code }), []);\n\n  useEffect(() => {\n    if (userRole) {\n      history.push(`${ROOT_URL}/menu`);\n    }\n  }, [userRole]);\n\n  useEffect(() => {\n    setLanguage(langMap[lang]);\n  }, [lang]);\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    form.validateFields((err: any, values: LoginFormValues) => {\n      const user = auth(values.username, values.password);\n      if (!err && user) {\n        addUser(user.role, form.getFieldsValue().code);\n        history.push(`${ROOT_URL}/menu`);\n      } else if (!user) {\n        setErrMsg('Вы неверно ввели логин или пароль');\n      }\n    });\n  };\n\n    const { getFieldDecorator } = form;\n    return (\n        <div id=\"components-form-demo-normal-login\">\n        <Form onSubmit={handleSubmit} className=\"login-form\" autoComplete=\"off\">\n            <Title level={4} style={{textAlign: 'center'}}>{language.authTitle}</Title>\n            <Form.Item>\n            {getFieldDecorator('code', {\n                rules: [\n                  { required: true, message: 'Введите код' },\n                { pattern: /[0-9]+/, message: 'Разрешены только цифры'}\n              ],\n            })(\n                <Input\n                \n                autoFocus\n                autoComplete=\"off\"\n                prefix={<Icon type=\"number\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                placeholder={language.organizationNumber}\n                />\n            )}\n            </Form.Item>\n            <Form.Item>\n            {getFieldDecorator('username', {\n                rules: [{ required: true, message: 'Введите имя пользователя' }],\n            })(\n                <Input\n                autoComplete=\"off\"\n                prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                placeholder={language.username}\n                />,\n            )}\n            </Form.Item>\n            <Form.Item>\n            {getFieldDecorator('password', {\n                rules: [{ required: true, message: 'Введите пароль' }],\n            })(\n                <Input\n                autoComplete=\"off\"\n                prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                type=\"password\"\n                placeholder={language.password}\n                />,\n            )}\n            </Form.Item>\n            <Form.Item>\n            {getFieldDecorator('remember', {\n                valuePropName: 'checked',\n                initialValue: true,\n            })(<Checkbox>{language.autoLogin}</Checkbox>)}\n            {errMsg && <div>\n                <Alert type=\"error\" message={errMsg}/>\n            </div>}\n            <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n                {language.login}\n            </Button>\n            </Form.Item>\n        </Form>\n      </div>\n    );\n}\n\nconst mapStatetoProps: MapStateToProps<LoginFormStateProps, LoginFormOwnProps, State> = (state) => {\n  return {\n    lang: state.languages.lang,\n    code: state.user.code,\n    userRole: state.user.role\n  }\n};\n\nconst mapDispatchToProps: MapDispatchToPropsFunction<LoginFormDispatchProps, LoginFormOwnProps> = (dispatch) => {\n  return {\n    addUser(role: string, code: string) {\n      dispatch(addUser(role, code));\n    }\n  }\n};\n\nexport const Auth = connect(mapStatetoProps, mapDispatchToProps)(Form.create<FormComponentProps<LoginFormOwnProps>>({ name: 'normal_login' })(withRouter<RouteComponentProps<LoginFormOwnProps & LoginFormDispatchProps & LoginFormStateProps, any, any>, any>(LoginForm)));\n","const fieldNames: fieldNamesInterface = {\n  customerNumber: 'customerNumber',\n  phoneNumber: 'phoneNumber',\n  name: 'name',\n  street: 'street',\n  houseNumber: 'houseNumber',\n  plz: 'plz',\n  city: 'city',\n  clientComment: 'clientComment',\n  deliveryCost: 'deliveryCost',\n  article: 'article',\n  quantity: 'quantity',\n  productName: 'productName',\n  price: 'price'\n};\n\nexport interface fieldNamesInterface {\n  customerNumber: string,\n  phoneNumber: string,\n  name: string,\n  street: string,\n  houseNumber: string,\n  plz: string,\n  city: string,\n  clientComment: string,\n  deliveryCost: string,\n  article: string;\n  quantity: string;\n  productName: string;\n  price: string;\n};\n\nexport default fieldNames;\n","export const selectValues = ['0,00', '0,50', '1,00', '1,50', '2,00', '2,50', '3,00'];\n","export function deepCopy<T extends Object>(object: T) : T {\n  let newObject: typeof object;\n  if (Array.isArray(object)) {\n    return deepArrayCopy(object);\n  } else if (typeof object === 'object') {\n    newObject = { ...object };\n  } else {\n    return object;\n  }\n  for (let key2 of Object.keys(newObject)) {\n    let key = key2 as keyof typeof newObject;\n    if (Array.isArray(newObject[key])) {\n\n      newObject[key] = deepArrayCopy(newObject[key] as any);\n    } else if (typeof newObject[key] === 'object') {\n      newObject[key] = deepCopy(newObject[key]);\n    }\n  }\n  return newObject;\n};\n\nfunction deepArrayCopy<T extends Array<any>>(arr: T):any {//FIXME\n  return arr.map((item: any) => deepCopy(item));\n};\n","import { CHANGE_LANGUAGE, ADD_USER, LOGOUT_USER, formDataActions, cartProductsActions } from './actions';\n\nimport fieldNames from '../constants/fieldNames';\nimport { selectValues } from '../constants/selectValues';\n\nimport { deepCopy } from '../helpers/deepCopy';\n\nimport {\n  LanguagesState,\n  LanguageAction,\n  UserState,\n  UserAction,\n  FormDataStateType,\n  FormDataStateAction,\n  CartProductsState,\n  CartProductsAction\n} from './reducersTypes';\n\nexport const languages = (state: LanguagesState = { lang: 'ru' }, action: LanguageAction) => {\n  switch (action.type) {\n    case CHANGE_LANGUAGE: {\n      return { lang: action.lang };\n    };\n    default: return state;\n  }\n};\n\nexport const user = (state: UserState = { role: '', code: '' }, action: UserAction) => {\n  switch (action.type) {\n    case ADD_USER: {\n      const { role, code } = action;\n      return { role, code };\n    };\n    case LOGOUT_USER: {\n      return {\n        ...state,\n        role: ''\n      };\n    }\n    default: return state;\n  }\n};\n\nexport const initialFormDataState: any = {//TODO: add types\n  [fieldNames.customerNumber]: '',\n  [fieldNames.phoneNumber]: '',\n  [fieldNames.customerNumber]: '',\n  [fieldNames.phoneNumber]: '',\n  [fieldNames.name]: '',\n  [fieldNames.street]: '',\n  [fieldNames.houseNumber]: '',\n  [fieldNames.plz]: '',\n  [fieldNames.city]: '',\n  [fieldNames.clientComment]: '',\n  [fieldNames.deliveryCost]: selectValues[0]\n};\n\nexport const formDataState = (state: FormDataStateType = initialFormDataState, action: FormDataStateAction) => {\n  switch (action.type) {\n    case formDataActions.ADD_TO_FORM_DATA: {\n      return {\n        ...state,\n        [action.fieldName]: action.fieldValue\n      };\n    };\n    case formDataActions.UPDATE_ALL_FIELDS: {\n      const newState = { ...state };\n      for (let [key, value] of Object.entries(action.newState)) {\n        newState[key] = value;\n      };\n      return newState;\n    };\n    case formDataActions.CLEAR_ALL_FIELDS: {\n      return { ...initialFormDataState };\n    };\n    default:\n      return state;\n  };\n};\n\nexport const initialCartProductsState = [];\n\nexport const cartProducts = (state: CartProductsState = initialCartProductsState, action: CartProductsAction) => {\n  switch (action.type) {\n\n    case cartProductsActions.ADD_PRODUCT_TO_CART: {\n      const { article, productName, price } = action;\n      const newState = deepCopy(state);\n\n      const articleIndex = newState.findIndex(({ article: newStateArticle }) => newStateArticle === article);\n      if (articleIndex !== -1) {\n        const prevQuantity = newState[articleIndex].quantity;\n        newState[articleIndex] = { ...newState[articleIndex], quantity: prevQuantity + 1 };\n      } else {\n        newState.push({ article, productName, price, quantity: 1 })\n      }\n      return newState;\n    }\n\n    case cartProductsActions.ADD_ADDITION_TO_PRODUCT_IN_CART: {\n      const { productArticle, additionArticle, additionName, additionPrice } = action;\n      const newState = deepCopy(state);\n      const productArticleIndex = newState.findIndex(({ article }) => article === productArticle);\n      if (productArticleIndex !== -1) {\n        const oldAdditions = newState[productArticleIndex].children;\n        if (oldAdditions) {\n          const additionArticleIndex = oldAdditions.findIndex(({ article }) => article === additionArticle);\n          if (additionArticleIndex !== -1) {\n            oldAdditions[additionArticleIndex].quantity = oldAdditions[additionArticleIndex].quantity + 1;\n          } else {\n            const productAdditions = newState[productArticleIndex].children;\n            if (productAdditions !== undefined) {\n              newState[productArticleIndex].children = [...(productAdditions), { article: additionArticle, productName: additionName, price: additionPrice, quantity: 1 }];\n            } else {\n              newState[productArticleIndex].children = [{ article: additionArticle, productName: additionName, price: additionPrice, quantity: 1 }];\n            }\n          }\n        } else {\n          newState[productArticleIndex].children = [{ article: additionArticle, productName: additionName, price: additionPrice, quantity: 1 }];\n        }\n      }\n      return newState;\n    }\n/* FIXME TESTS */\n    case cartProductsActions.DELETE_PRODUCT_FROM_CART: {\n        const { productArticle } = action;\n        const newState = deepCopy(state);\n        return newState.filter(({ article }) => article !== productArticle);\n    }\n\n    case cartProductsActions.DELETE_ADDITION_OF_PRODUCT_FROM_CART: {\n      const { productArticle, additionArticle } = action;\n      const newState = deepCopy(state);\n      const productIndex = newState.findIndex(({ article }) => article === productArticle);\n      if (productIndex !== -1) {\n        const additions = newState[productIndex].children;\n        if (additions){\n          newState[productIndex].children = additions.filter(({ article }) => article !== additionArticle);\n        }\n      }\n      return newState;\n    }\n/* END FIXME */\n    case cartProductsActions.INCREMENT_QUANTITY_OF_PRODUCT_IN_CART: {\n      const { productArticle } = action;\n      const newState = deepCopy(state);\n      const productIndex = newState.findIndex(({ article }) => article === productArticle);\n      if (productIndex !== -1) {\n        newState[productIndex] = { ...newState[productIndex], quantity: newState[productIndex].quantity + 1 };\n      }\n      return newState;\n    }\n\n    case cartProductsActions.DECREMENT_QUANTITY_OF_PRODUCT_IN_CART: {\n      const { productArticle } = action;\n      const newState = deepCopy(state);\n      const productIndex = newState.findIndex(({ article }) => article === productArticle);\n      if (productIndex !== -1) {\n        const currentQuantity = newState[productIndex].quantity;\n        if (currentQuantity > 1) {\n          newState[productIndex] = { ...newState[productIndex], quantity: currentQuantity - 1 };\n        } else {\n          newState.splice(productIndex, 1);\n        }\n      }\n      console.log(newState);\n      return newState;\n    }\n\n    case cartProductsActions.INCREMENT_QUANTITY_OF_ADDITION_OF_PRODUCT: {\n      const { productArticle, additionArticle } = action;\n      const newState = deepCopy(state);\n      const productIndex = newState.findIndex(({ article }) => productArticle === article);\n      if (productIndex !== -1) {\n        const additions = newState[productIndex].children;\n        if (additions) {\n          const additionIndex = additions.findIndex(({ article }) => article === additionArticle);\n          if (additionIndex !== -1) {\n            const addition = additions[additionIndex];\n            additions[additionIndex] = { ...addition, quantity: addition.quantity + 1 };\n          }\n        }\n      }\n      return newState;\n    }\n\n    case cartProductsActions.DECREMENT_QUANTITY_OF_ADDITION_OF_PRODUCT: {\n      const { productArticle, additionArticle } = action;\n      const newState = deepCopy(state);\n      const productIndex = newState.findIndex(({ article }) => productArticle === article);\n      if (productIndex !== -1) {\n        const additions = newState[productIndex].children;\n        if (additions) {\n          const additionIndex = additions.findIndex(({ article }) => article === additionArticle);\n          if (additionIndex !== -1) {\n            const addition = additions[additionIndex];\n            if (addition.quantity > 1) {\n              additions[additionIndex] = { ...addition, quantity: addition.quantity - 1 };\n            } else {\n              additions.splice(additionIndex, 1);\n            }\n          }\n        }\n      }\n      return newState;\n    }\n    default:\n      return state;\n  }\n}\n","import React, { useReducer, useEffect, useCallback, useState } from 'react';\nimport { Button, Form, Input, AutoComplete, Select, Divider, Card } from 'antd';\n\nimport { withRouter } from 'react-router-dom';\nimport { connect, MapDispatchToPropsNonObject, MapStateToPropsParam } from 'react-redux';\n\n//types\nimport { DeliveryFormProps } from './DeliveryFormTypes';\nimport { langType } from '../../lang';\n\nimport fakeBD from '../../fakeBD';\nimport { langMap } from '../../lang';\n\nimport fieldNames from '../../constants/fieldNames';\nimport { selectValues } from '../../constants/selectValues';\n\nimport { initialFormDataState } from '../../redux/reducers';\nimport { formDataActions, addToFormData, updateAllFieldsOfFormData, clearAllFields } from '../../redux/actions';\nimport { Action } from 'redux';\n\nimport { ROOT_URL } from '../../constants/rootUrl';\n\nconst { Option } = Select;\n\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 12 },\n    lg: { span: 12 },\n    xl: { span: 12 },\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 12 },\n    lg: { span: 12 },\n    xl: { span: 12 }\n  },\n};\n\nconst dataSourceActions = {\n  ADD_TO_DATA_SOURCE: 'ADD_TO_DATA_SOURCE'\n};\n\ntype dataSourceReducerTypes = typeof dataSourceActions.ADD_TO_DATA_SOURCE;\ninterface dataSourceReducerAction extends Action<dataSourceReducerTypes> {\n  dataSourceName: string;\n  dataSourceData: string[];\n};\n\nfunction dataSourceReducer(state: any, action: dataSourceReducerAction) {//FIXME\n  switch (action.type) {\n    case dataSourceActions.ADD_TO_DATA_SOURCE: {\n      return {\n        ...state,\n        [action.dataSourceName]: action.dataSourceData\n      }\n    }\n  }\n};\n\n\nconst addToDataSource = (dataSourceName: string, dataSourceData: string[]) => ({ type: dataSourceActions.ADD_TO_DATA_SOURCE, dataSourceName, dataSourceData });\n\n\n\nconst initialDataSourceState: any = {//TODO: add types\n  [fieldNames.customerNumber]: [],\n  [fieldNames.phoneNumber]: [],\n  [fieldNames.customerNumber]: [],\n  [fieldNames.phoneNumber]: [],\n  [fieldNames.name]: [],\n  [fieldNames.street]: [],\n  [fieldNames.houseNumber]: [],\n  [fieldNames.plz]: [],\n  [fieldNames.city]: [],\n  [fieldNames.clientComment]: [],\n  [fieldNames.deliveryCost]: []\n};\n\nconst tryToFetchUser = (fieldId: string, fieldValue: string) => fakeBD.customers.find((customer: any) => customer[fieldId] == fieldValue);\n\nconst compareTwoObjects = (object1: any, object2: any) => {\n  if (Object.keys(object1).length !== Object.keys(object2).length)\n    return false;\n  for (let [key, value] of Object.entries(object1)) {\n    if (object2[key] !== value)\n      return false;\n  };\n  return true;\n}\n\n\nconst mapDispatchToProps: MapDispatchToPropsNonObject<any, any> = (dispatch, ownProps) => ({\n  addDataToFormData(id: string, value: string) {\n    dispatch(addToFormData(id, value))\n  },\n  updateFieldsOfFormData(newState: any) {\n    dispatch(updateAllFieldsOfFormData(newState));\n  },\n  clearFields() {\n    dispatch(clearAllFields());\n  }\n});\n\nconst mapStateToProps: MapStateToPropsParam<any, any, any> = (state) => ({ formDataState: state.formDataState, lang: state.languages.lang });\n\nconst DeliveryForm = Form.create<DeliveryFormProps>(\n  { name: 'delivery_form' }\n  )(connect(mapStateToProps, mapDispatchToProps)(withRouter((\n    { lang, formDataState, addDataToFormData, clearFields, updateFieldsOfFormData, form: { getFieldDecorator, setFieldsValue, getFieldsValue }, form, history }: any) => {\n\n  const [dataSourceState, dispatchToDataSource] = useReducer(dataSourceReducer, initialDataSourceState);\n  const [dataSourceLiveState, dispatchToDataSourceLive] = useReducer(dataSourceReducer, initialDataSourceState);\n  const [language, setLanguage] = useState(langMap[lang as langType]);\n\n  useEffect(() => {\n    setLanguage(langMap[lang as langType]);\n  }, [lang]);\n  useEffect(() => {\n    window.addEventListener('keydown', handleEscDown);\n    return () => window.removeEventListener('keydown', handleEscDown);\n  }, []);\n\n  useEffect(() => {\n    if (compareTwoObjects(getFieldsValue(), formDataState))\n      return;\n    setFieldsValue(formDataState);\n  }, [formDataState, setFieldsValue, getFieldsValue]);\n\n  const onFieldChange = useCallback((id: string, value: string) => {\n    addDataToFormData(id, value);\n  }, [addDataToFormData]);\n\n  const handleSearch = useCallback((arg: string, id: string) => {\n    updateFieldsOfFormData(getFieldsValue());\n    if (!dataSourceState[id].length) {\n      const fetched = fakeBD.customers.map(({ [id]: value } : any) => value && value.toString());\n      dispatchToDataSource(addToDataSource(id, fetched));//TODO: add types\n      dispatchToDataSourceLive(addToDataSource(id, fetched.filter((item: string) => item && item.startsWith(arg))));\n    } else {\n      dispatchToDataSourceLive(addToDataSource(id, dataSourceState[id].filter((item: string) => item && item.startsWith(arg))));\n    }\n  }, [updateFieldsOfFormData, getFieldsValue, dataSourceState, dispatchToDataSource, dispatchToDataSourceLive]);\n\n  const nextPage = useCallback(() => {\n    form.validateFields((err: any) => {\n      if (!err) {\n        history.push(`${ROOT_URL}/finish`);\n      }\n    });\n  }, [form, history]);\n\n  const handleClearClick = useCallback(() => {\n    setFieldsValue(initialFormDataState);\n    clearFields();\n  }, [setFieldsValue, clearFields]);\n\n  const handleSubmit = useCallback((e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    nextPage();\n  }, [nextPage]);\n\n  const handleEscDown = useCallback((e: any) => {\n    if (e.key === 'Escape') {\n      handleClearClick();\n    } else if (e.key === 'F2') {\n      nextPage();\n    }\n  }, [handleClearClick, nextPage]);\n\n  const handleEnterDown = useCallback((id: string, value: string) => {\n    const customer = tryToFetchUser(id, value);\n    if (customer) {\n      setFieldsValue(customer);\n      updateFieldsOfFormData(customer);\n    }\n  }, [setFieldsValue, updateFieldsOfFormData]);\n\n  return (\n    <div>\n      <Form onSubmit={handleSubmit} onKeyDown={handleEscDown}  {...formItemLayout}>\n        <Card style={{ width: '60%', maxWidth: '500px'}}>\n        <Form.Item label={language.customerNumber}>\n          {getFieldDecorator(fieldNames.customerNumber, {\n            rules: [\n              { required: true, message: 'Введите номер клиента' },\n              { pattern: /[0-9]+/, message: 'Разрешены только цифры' }\n            ]\n          })(\n            <AutoComplete\n              dataSource={dataSourceLiveState[fieldNames.customerNumber]}\n              onSearch={(arg) => handleSearch(arg, fieldNames.customerNumber)}\n              onSelect={(value) => handleEnterDown(fieldNames.customerNumber, value as string)}\n            >\n              <Input onKeyDown={handleEscDown} maxLength={6} id={fieldNames.customerNumber} />\n            </AutoComplete>)}\n        </Form.Item>\n        <Form.Item label={language.phoneNumber}>\n          {getFieldDecorator(fieldNames.phoneNumber, {\n            rules: [\n              { required: true, message: 'Введите номер телефона клиента' },\n              { pattern: /[0-9]+/, message: 'Разрешены только цифры' }\n            ]\n          })(\n            <AutoComplete\n              dataSource={dataSourceLiveState[fieldNames.phoneNumber]}\n              onSearch={(arg) => handleSearch(arg, fieldNames.phoneNumber)}\n              onSelect={(value) => handleEnterDown(fieldNames.phoneNumber, value as string)}\n            >\n              <Input onKeyDown={handleEscDown} autoFocus={true} maxLength={15} id={fieldNames.phoneNumber} />\n            </AutoComplete>)}\n        </Form.Item>\n        <Form.Item label={language.name}>\n          {getFieldDecorator(fieldNames.name, {\n            rules: [\n              { required: true, message: 'Введите имя клиента' }\n            ]\n          })(\n            <AutoComplete\n              dataSource={dataSourceLiveState[fieldNames.name]}\n              onSearch={(arg) => handleSearch(arg, fieldNames.name)}\n              onSelect={(value) => handleEnterDown(fieldNames.name, value as string)}\n            >\n              <Input onKeyDown={handleEscDown}  maxLength={30} id={fieldNames.name} />\n            </AutoComplete>)}\n        </Form.Item>\n        <Form.Item label={language.city}>\n          {getFieldDecorator(fieldNames.city, {\n            rules: [\n              { required: true, message: 'Введите название города' }\n            ]\n          })(<Input onKeyDown={handleEscDown}  maxLength={25} id={fieldNames.city} />)}\n        </Form.Item>\n        <Form.Item label={language.street}>\n          {getFieldDecorator(fieldNames.street, {\n            rules: [\n              { required: true, message: 'Введите название улицы' }\n            ]\n          })(<Input onKeyDown={handleEscDown}  maxLength={30} id={fieldNames.street} />)}\n        </Form.Item>\n        <Form.Item label={language.houseNumber}>\n          {getFieldDecorator(fieldNames.houseNumber, {\n            rules: [\n              { required: true, message: 'Введите номер дома' },\n              { pattern: /[0-9]+/, message: 'Разрешены только цифры' }\n            ]\n          })(<Input onKeyDown={handleEscDown}  maxLength={6} id={fieldNames.houseNumber} />)}\n        </Form.Item>\n        <Form.Item label={language.plz}>\n          {getFieldDecorator(fieldNames.plz, {\n            rules: [\n              { required: true, message: 'Введите почтовый индекс' },\n              { pattern: /[0-9]+/, message: 'Разрешены только цифры' }\n            ]\n          })(<Input onKeyDown={handleEscDown}  maxLength={6} id={fieldNames.plz} />)}\n        </Form.Item>\n        <Form.Item label={language.clientComment}>\n        {getFieldDecorator(fieldNames.clientComment)(\n          <Input onKeyDown={handleEscDown}  maxLength={35} id={fieldNames.clientComment} />)}\n        </Form.Item>\n        <Form.Item label={language.deliveryCost}>\n        {getFieldDecorator(fieldNames.deliveryCost)(\n          <Select onChange={(value: string) => onFieldChange(fieldNames.deliveryCost, value)} id={fieldNames.deliveryCost}>\n            {selectValues.map(value => <Option key={value} value={value}>{value}</Option>)}\n          </Select>)}\n        </Form.Item>\n      </Card>\n      <Divider/>\n      <div style={{ display: 'flex', flexFlow: 'row nowrap', justifyContent: 'space-between' }}>\n        <Button type=\"danger\" size=\"large\" onClick={handleClearClick}>{language.clear} / ESC</Button>\n        <Form.Item>\n          <Button htmlType=\"submit\" type=\"primary\" size=\"large\">{language.goToOrder} / F2</Button>\n        </Form.Item>\n      </div>\n      </Form>\n    </div>\n  )\n})));\n\nexport default DeliveryForm;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { Menu, Icon, Layout, Typography, Button, Divider, Radio } from 'antd';\nimport { RadioChangeEvent } from 'antd/lib/radio';\nimport { withRouter } from 'react-router-dom';\nimport { RouteComponentProps } from 'react-router';\nimport { connect, MapStateToProps, MapDispatchToPropsFunction } from 'react-redux';\n\nimport './Menu.css';\n\nimport { langMap } from '../../lang';\nimport { logoutUser, changeLanguage } from '../../redux/actions';\n\n\nimport DeliveryForm from '../DeliveryForm';\n\nimport { State } from '../../redux/types';\nimport { MenuPageProps, MenuPageStateProps, MenuPageDispatchProps, MenuPageOwnProps } from './types';\nimport { ClickParam } from 'antd/lib/menu';\n\nimport { ROOT_URL } from '../../constants/rootUrl';\n\nconst { Header, Content, Sider } = Layout;\nconst { Text } = Typography;\n\n\n\nconst MenuPage = ({ lang, userRole, logoutFromUser, changeLang, history }: MenuPageProps) => {\n  const [language, setLanguage] = useState(langMap[lang]);\n  const [collapsed, setCollapsed] = useState(false);\n\n  useEffect(() => {\n    setLanguage(langMap[lang]);\n  }, [lang, setLanguage]);\n\n  useEffect(() => {\n    setLanguage(langMap[lang]);\n  }, [lang]);\n\n  const logout = useCallback((e: ClickParam) => {\n    logoutFromUser();\n    history.push(`${ROOT_URL}/`);\n  }, [logoutFromUser, history]);\n\n  const handleLangChange = useCallback((e: RadioChangeEvent) => {\n    const { target: { value } } = e;\n    changeLang(value);\n  }, [changeLang]);\n\n  const handleCollapse = useCallback((collapsed: boolean) => {\n    setCollapsed(collapsed);\n  }, [setCollapsed]);\n\n  return (\n    <Layout style={{ minHeight: '100vh'}}>\n      <Sider collapsible onCollapse={handleCollapse} theme=\"light\" style={{\n      overflow: 'auto',\n      height: '100vh',\n      left: 0,\n    }}>\n        <div className=\"menu\">\n          <Menu style={{height: '100vh'}} defaultSelectedKeys={['2']} mode=\"inline\">\n            <Menu.Item disabled>\n              <Icon type=\"tag\" />\n              {!collapsed && <Radio.Group value={lang} onChange={handleLangChange}>\n                <Radio.Button value=\"ru\">ru</Radio.Button>\n                <Radio.Button value=\"de\">de</Radio.Button>\n              </Radio.Group>}\n            </Menu.Item>\n            <Menu.Item key=\"1\" onClick={logout} className=\"logout-button\">\n              <Icon type=\"logout\" />\n              <span>{language.logout}</span>\n            </Menu.Item>\n            <Menu.Item key=\"2\">\n              <Icon type=\"phone\" />\n              <span>{language.callForm}</span>\n            </Menu.Item>\n            <Menu.Item key=\"3\">\n              <Icon type=\"shopping-cart\" />\n              <span>{language.allOrders}</span>\n            </Menu.Item>\n            <Menu.Item key=\"4\">\n              <Icon type=\"dashboard\" />\n              <span>{language.cookingMonitor}</span>\n            </Menu.Item>\n            <Menu.Item key=\"5\">\n              <Icon type=\"car\" />\n              <span>{language.carMonitor}</span>\n            </Menu.Item>\n            <Menu.Item key=\"6\">\n              <Icon type=\"bar-chart\" />\n              <span>{language.report}</span>\n            </Menu.Item>\n            <Menu.Item key=\"7\">\n              <Icon type=\"setting\" />\n              <span>{language.settings}</span>\n            </Menu.Item>\n            <Menu.Item key=\"8\">\n              <Icon type=\"question-circle\" />\n              <span>{language.help}</span>\n            </Menu.Item>\n          </Menu>\n          <Text style={{ textAlign: 'center', paddingBottom: '20px', borderRight: '1px solid #e8e8e8' }}>{userRole}</Text>\n        </div>\n      </Sider>\n      <Layout>\n        <Header style={{ background: '#fff', marginTop: '24px', height: 'auto', display: 'flex', flexFlow: 'row nowrap', justifyContent: 'space-around' }}>\n          <Button type=\"dashed\" size=\"large\">{language.tableOrders}</Button>\n          <Button type=\"dashed\" size=\"large\">{language.selfPickUp}</Button>\n          <Button type=\"dashed\" size=\"large\">{language.sales}</Button>\n          <Button type=\"dashed\" size=\"large\">{language.phoneMonitor}</Button>\n        </Header>\n        <Divider/>\n        <Content style={{ margin: '0 16px', background: 'inherit'  }}>\n          <DeliveryForm />\n        </Content>\n      </Layout>\n    </Layout>\n  );\n};\n\nconst mapStatetoProps: MapStateToProps<MenuPageStateProps, MenuPageOwnProps, State> = (state) => {\n  return {\n    formDataState: state.formDataState,\n    lang: state.languages.lang,\n    userRole: state.user.role\n  }\n};\n\nconst mapDispatchToProps: MapDispatchToPropsFunction<MenuPageDispatchProps, MenuPageOwnProps> = (dispatch) => ({ \n  logoutFromUser() {\n    dispatch(logoutUser());\n  },\n  changeLang(lang: 'ru' | 'de') {\n    dispatch(changeLanguage(lang));\n  }\n});\n\nexport const LeftMenu = connect(\n  mapStatetoProps,\n  mapDispatchToProps\n)(withRouter<RouteComponentProps<MenuPageDispatchProps & MenuPageOwnProps & MenuPageStateProps>, any>(MenuPage));//FIXME\n","import React, { useState, useCallback, useMemo } from 'react';\nimport { connect, MapDispatchToPropsFunction, MapStateToProps } from 'react-redux';\n\nimport { Table, Icon } from 'antd';\n\nimport { langMap, langMapType, langType } from '../../lang';\n\nimport {\n  addProductToCart,\n  addAdditionToProductInCart,\n  incrementQuantityOfProductInCart,\n  decrementQuantityOfProductInCart,\n  incrementQuantityOfAdditionOfProduct,\n  decrementQuantityOfAdditionOfProduct\n} from '../../redux/actions';\n//types\nimport { TableRowSelection } from 'antd/lib/table';\nimport { CartProductsState } from '../../redux/reducersTypes';\nimport { State } from '../../redux/types';\n\nimport fieldNames from '../../constants/fieldNames';\n\nimport './Cart.css';\n\nconst data = [\n  {\n    key: 1,\n    article: 1,\n    quantity: 10,\n    productName: 'Test1',\n    price: 60,\n    children: [\n      {\n        key: 11,\n        parentArticle: 1,\n        article: 11,\n        productName: 'Test2',\n        price: 60,\n      },\n      {\n        key: 12,\n\n        parentArticle: 1,\n        article: 12,\n        productName: 'Test3',\n        price: 60,\n      },\n      {\n        key: 13,\n\n        parentArticle: 1,\n        article: 13,\n        productName: 'Test4',\n        price: 60,\n      },\n    ],\n  },\n  {\n    key: 2,\n    article: 2,\n    quantity: 10,\n    productName: 'Test5',\n    price: 60,\n    children: [\n      {\n        key: 21,\n\n        parentArticle: 2,\n        article: 21,\n        productName: 'Test6',\n        price: 60,\n      },\n      {\n        key: 22,\n\n        parentArticle: 2,\n        article: 22,\n        productName: 'Test7',\n        price: 60,\n      },\n      {\n        key: 23,\n        parentArticle: 2,\n        article: 23,\n        productName: 'Test8',\n        price: 60,\n      },\n    ],\n  },\n];\n\ntype record = {\n  article?: number,\n  quantity?: number,\n  productName: string,\n  price: number,\n}\n// rowSelection objects indicates the need for row selection\nconst rowSelection: TableRowSelection<record> = {\n  onChange: (selectedRowKeys, selectedRows) => {\n    console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows);\n  },\n  onSelect: (record, selected, selectedRows) => {\n    console.log(\"OnSelect: \", Object.entries(record), selected, selectedRows);\n  },\n  onSelectAll: (selected, selectedRows, changeRows) => {\n    console.log(\"onSelectAll: \", selected, selectedRows, changeRows);\n  },\n};\n\ninterface CartOwnProps { };\n\ninterface CartProps extends CartOwnProps, CartStateProps, CartDispatchProps {\n}\n\nfunction Cart({ cartProducts, lang, addProduct, addAddition, incrementAddition, incrementProduct, decrementAddition, decrementProduct }: CartProps) {\n  const [cart, setCart] = useState('cartData');\n  const [language, setLanguage] = useState(langMap[lang]);\n  const [products, setProducts] = useState(data);\n\n  const addToCart = useCallback((article: number, parentArticle?: number) => {\n    return (e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n      if (parentArticle) {\n        const product = products.find(({ article: productArticle }) => productArticle === parentArticle);\n        if (product && product.children) {\n          const addition = product.children.find(({ article: productArticle }) => productArticle === article);\n          if (addition) {\n            const { productName,  price } = addition;\n            addAddition(parentArticle, article, productName, price);\n          }\n        }\n      } else {\n        const addition = products.find(({ article: productArticle }) => productArticle === article);\n        if (addition) {\n          const { productName, price } = addition;\n          addProduct(article, productName, price);\n        }\n      }\n    }\n  }, [products, addAddition, addProduct]);\n\n  const decrementFromCart = useCallback((article: number, parentArticle?: number) => {\n    return (e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n      if (parentArticle) {\n        decrementAddition(parentArticle, article)\n      } else {\n        decrementProduct(article);\n      }\n    }\n  }, [products, addAddition, addProduct]);\n\n  const deleteFromCart = useCallback((article: number, parentArticle?: number) => {\n    return (e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n      /*FIXME */\n    }\n  }, [products, addAddition, addProduct]);\n  const columns1 = [\n    {\n      title: language.article,\n      dataIndex: 'article',\n      key: 'article',\n    },\n    {\n      title: language.quantity,\n      dataIndex: 'quantity',\n      key: 'quantity',\n      width: '12%',\n    },\n    {\n      title: language.productName,\n      dataIndex: 'productName',\n      width: '30%',\n      key: 'productName',\n    },\n    {\n      title: language.price,\n      dataIndex: 'price',\n      width: '30%',\n      key: 'price',\n    },\n    {\n      key: 'action',\n      title: 'Action',\n      render: ({ parentArticle, article }: { parentArticle: number, article: number }) => {\n        return (\n          <div key={parentArticle + \":\" + article}>\n            <Icon type=\"close-square\" onClick={deleteFromCart(article, parentArticle)} />\n            <Icon type=\"minus-square\" onClick={decrementFromCart(article, parentArticle)}/>\n            <Icon type=\"plus-square\" onClick={addToCart(article, parentArticle)} />\n          </div>)\n      }\n    }\n  ];\n\n  const columns2 = [\n    {\n      title: language.article,\n      dataIndex: 'article',\n      key: 'article',\n    },\n    {\n      title: language.quantity,\n      dataIndex: 'quantity',\n      key: 'quantity',\n      width: '12%',\n    },\n    {\n      title: language.productName,\n      dataIndex: 'productName',\n      width: '30%',\n      key: 'productName',\n    },\n    {\n      title: language.price,\n      dataIndex: 'price',\n      width: '30%',\n      key: 'price',\n    },\n    {\n      key: 'action',\n      title: 'Action',\n      render: ({ parentArticle, article }: { parentArticle: number, article: number }) => {\n        return (\n          <div key={article + \":\" + parentArticle}>\n            <Icon type=\"minus-square\" onClick={decrementFromCart(article, parentArticle)}/>\n            <Icon type=\"plus-square\" onClick={addToCart(article, parentArticle)} />\n          </div>)\n      }\n    }\n  ];\n  return (\n    <div className=\"cart\">\n      <Table className=\"cart__order-table\" defaultExpandAllRows columns={columns1} rowSelection={rowSelection} dataSource={cartProducts} />\n      <Table className=\"cart__products-table\" defaultExpandAllRows columns={columns2} rowSelection={rowSelection} dataSource={data} />\n    </div>\n  )\n};\n\ninterface CartStateProps {\n  cartProducts: CartProductsState;\n  lang: langType;\n}\n\nconst mapStateToProps: MapStateToProps<CartStateProps, CartOwnProps, State> = (state, props) => {\n  return {\n    cartProducts: state.cartProducts,\n    lang: state.languages.lang\n  }\n};\n\ninterface CartDispatchProps {\n  addProduct: (article: number, productName: string, price: number) => void;\n  addAddition: (productArticle: number, additionArticle: number, additionName: string, additionPrice: number) => void;\n  incrementProduct: (productArticle: number) => void;\n  decrementProduct: (productArticle: number) => void;\n  incrementAddition: (productArticle: number, additionArticle: number) => void;\n  decrementAddition: (productArticle: number, additionArticle: number) => void;\n};\n\nconst mapDispatchToProps: MapDispatchToPropsFunction<CartDispatchProps, CartOwnProps> = (dispatch, props) => {\n  return {\n    addProduct(article: number, productName: string, price: number) {\n      dispatch(addProductToCart(article, productName, price));\n    },\n    addAddition(productArticle: number, additionArticle: number, additionName: string, additionPrice: number) {\n      dispatch(addAdditionToProductInCart(productArticle, additionArticle, additionName, additionPrice));\n    },\n    incrementProduct(productArticle: number) {\n      dispatch(incrementQuantityOfProductInCart(productArticle));\n    },\n    decrementProduct(productArticle: number) {\n      dispatch(decrementQuantityOfProductInCart(productArticle));\n    },\n    incrementAddition(productArticle: number, additionArticle: number) {\n      dispatch(incrementQuantityOfAdditionOfProduct(productArticle, additionArticle));\n    },\n    decrementAddition(productArticle: number, additionArticle: number) {\n      dispatch(decrementQuantityOfAdditionOfProduct(productArticle, additionArticle));\n    }\n  }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart);\n","import { combineReducers, createStore } from 'redux';\nimport { languages, user, formDataState, cartProducts } from './reducers';\n\nexport const appState = combineReducers({ languages, user, formDataState, cartProducts });\nconst initialState = JSON.parse(localStorage.getItem('pizza-redux') as string);\nlet store = initialState ? createStore(appState, initialState) : createStore(appState);\n\nstore.subscribe(() => localStorage.setItem('pizza-redux', JSON.stringify(store.getState())));\n\nexport default store;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { Provider } from 'react-redux';\n\nimport './index.css';\n\nimport { Auth } from './components/Auth';\nimport { LeftMenu } from './components/LeftMenu';\nimport Cart from './components/Cart';\n\nimport store from './redux';\n\nimport { ROOT_URL } from './constants/rootUrl';\n\nReactDOM.render(\n  <Router>\n    <Provider store={store}>\n      <Route path={`${ROOT_URL}/menu`} component={LeftMenu}/>\n      <Route path={`${ROOT_URL}/index.html`} exact component={Auth}/>\n      <Route path={`${ROOT_URL}/`} exact component={Auth}/>\n      <Route path={`${ROOT_URL}/finish`} component={Cart}/>\n    </Provider>\n  </Router>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}