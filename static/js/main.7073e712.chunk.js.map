{"version":3,"sources":["redux/actions.ts","constants/fieldNames.ts","constants/selectValues.ts","redux/reducers.ts","redux/index.ts","fakeBD.ts","lang/index.ts","lang/ru.ts","lang/de.ts","constants/rootUrl.ts","components/DeliveryForm/index.tsx","components/Auth/index.tsx","components/Cart/subcomponents/SumForm.tsx","components/Cart/subcomponents/reduxProvider.ts","components/Cart/index.tsx","components/Cart/reduxProvider.ts","components/LeftMenu/index.tsx","components/App/index.tsx","index.tsx"],"names":["cartProductsActions","formDataActions","addToFormData","fieldName","fieldValue","type","fieldNames","customerNumber","phoneNumber","name","street","houseNumber","plz","city","clientComment","deliveryCost","article","quantity","productName","price","selectValues","initialFormDataState","initialCartProductsState","appState","combineReducers","languages","state","lang","action","user","role","code","formDataState","newState","Object","entries","key","value","cartProducts","ADD_PRODUCT_TO_CART","id","tax","articleIndex","findIndex","prevQuantity","slice","ADD_ADDITION_TO_PRODUCT_IN_CART","productId","additionId","additionName","additionPrice","additionTax","productIndex","oldAdditions","additions","Array","isArray","additionArticleIndex","prevQiantity","productAdditions","undefined","DELETE_PRODUCT_FROM_CART","filter","DELETE_ADDITION_OF_PRODUCT_FROM_CART","INCREMENT_QUANTITY_OF_PRODUCT_IN_CART","DECREMENT_QUANTITY_OF_PRODUCT_IN_CART","currentQuantity","INCREMENT_QUANTITY_OF_ADDITION_OF_PRODUCT","additionIndex","addition","DECREMENT_QUANTITY_OF_ADDITION_OF_PRODUCT","initialState","localStorage","getItem","JSON","parse","store","createStore","setItem","stringify","subscribe","getState","fakeBD","customers","products","searchProducts","searchString","toLowerCase","product","includes","langMap","authTitle","organizationNumber","username","password","autoLogin","login","tableOrders","selfPickUp","sales","phoneMonitor","clear","goToOrder","logout","callForm","allOrders","cookingMonitor","carMonitor","report","settings","help","back","freeDelivery","print","comment","goods","discount","totalPrice","tax_7","tax_19","articlePrices","ROOT_URL","Header","Layout","Content","Option","Select","formItemLayout","labelCol","xs","span","sm","lg","xl","wrapperCol","dataSourceActions","ADD_TO_DATA_SOURCE","dataSourceReducer","dataSourceName","dataSourceData","addToDataSource","initialDataSourceState","DeliveryForm","Form","create","connect","dispatch","addDataToFormData","updateFieldsOfFormData","updateAllFieldsOfFormData","clearFields","withRouter","form","getFieldDecorator","setFieldsValue","getFieldsValue","history","useReducer","dataSourceState","dispatchToDataSource","dataSourceLiveState","dispatchToDataSourceLive","useState","language","setLanguage","onFieldChange","useCallback","handleSearch","arg","length","item","startsWith","fetched","map","toString","nextPage","validateFields","err","push","handleClearClick","handleSubmit","e","preventDefault","handleEscDown","handleEnterDown","fieldId","customer","find","useEffect","window","addEventListener","removeEventListener","object1","object2","keys","compareTwoObjects","style","background","marginTop","height","display","flexFlow","justifyContent","size","margin","onSubmit","onKeyDown","width","maxWidth","Item","label","rules","required","message","pattern","dataSource","onSearch","onSelect","maxLength","autoFocus","onChange","onClick","htmlType","Title","Typography","Auth","userRole","addUser","errMsg","setErrMsg","values","className","autoComplete","level","textAlign","prefix","color","placeholder","valuePropName","initialValue","SumForm","mwst_7","mwst_19","greichten","zutaten","total_price","onDeliveryCostChange","event","target","onDiscountChange","disabled","suffix","naturalSort","require","proudctsTableScrollParams","y","cartTableScrollParams","IconStyle","fontSize","selectSearchInputText","document","querySelector","focus","setRangeText","ProductNameRenderer","testStr","match","NullComponent","scrollToCurrentSelectedItem","curItem","scrollIntoView","addProduct","addProductToCart","addAddition","addAdditionToProductInCart","deleteProduct","deleteProductFromCart","deleteAddition","deleteAdditionOfProductFromCart","incrementProduct","incrementQuantityOfProductInCart","decrementProduct","decrementQuantityOfProductInCart","incrementAddition","incrementQuantityOfAdditionOfProduct","decrementAddition","decrementQuantityOfAdditionOfProduct","search","setSearch","isAlert","setIsAlert","description","alertMessage","setAlertMessage","currentSelection","setCurrentSelection","currentSelectedProductInCart","setProductInCart","wasImplisitySetted","setWasImplicitySetted","sortedProducts","useMemo","unsortedProducts","sort","a","b","localeCompare","formattedSearch","newSelection","productsWithSelected","selected","filteredProducts","header","keyDownListener","stopPropagation","newSelectionArticle","TableRow","props","parentId","isSelected","children","record","isHeader","isInCart","cart","forEach","recordId","recordParentId","console","log","customTableComponents","body","row","onMinusKeyDown","currentProduct","typeOfCurrentProduct","lastAddedProduct","onPlusOrEnterKeyDown","onSearchChange","lastChar","addToCart","decrementFromCart","deleteFromCart","onBackButtonClick","DecrementFromCartIcon","IncrementToCartIcon","DeleteFromCartIcon","onFreeDeliveryClick","onAlertClose","allKeyDown","cartProductsSum","cartProductsProductsSum","cartProductsAdditionsSum","child","Math","round","newTotalPrice","parseFloat","columns1","title","dataIndex","render","columns2","cartProductsWithKeys","viewName","cartProductsExpandedRowKeys","productsExpandedRowKeys","container","containerRect","getBoundingClientRect","curItemRect","bottom","top","timeoutId","setTimeout","clearTimeout","closable","onClose","components","expandIcon","pagination","scroll","bordered","expandedRowKeys","defaultExpandAllRows","columns","Text","LeftMenu","logoutFromUser","changeLang","changeLanguage","collapsed","handleLangChange","defaultSelectedKeys","mode","Group","Button","paddingBottom","borderRight","Sider","setCollapsed","handleCollapse","minHeight","location","pathname","collapsible","onCollapse","theme","overflow","left","path","component","exact","Cart","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.7073e712.chunk.js","sourcesContent":["import { changeLanguageType, addUserType, logoutUserType } from './actionsTypes';\n\nexport const CHANGE_LANGUAGE = 'CHANGE_LANGUAGE';\nexport const ADD_USER = 'ADD_USER';\nexport const LOGOUT_USER = 'LOGOUT_USER';\n\nexport const formDataActions = {\n  ADD_TO_FORM_DATA: 'ADD_TO_FORM_DATA',\n  UPDATE_ALL_FIELDS: 'UPDATE_ALL_FIELDS',\n  CLEAR_ALL_FIELDS: 'CLEAR_ALL_FIELDS'\n};\n\nexport enum cartProductsActions {\n  ADD_PRODUCT_TO_CART,\n  ADD_ADDITION_TO_PRODUCT_IN_CART,\n  DELETE_PRODUCT_FROM_CART,\n  DELETE_ADDITION_OF_PRODUCT_FROM_CART,\n  INCREMENT_QUANTITY_OF_PRODUCT_IN_CART,\n  DECREMENT_QUANTITY_OF_PRODUCT_IN_CART,\n  INCREMENT_QUANTITY_OF_ADDITION_OF_PRODUCT,\n  DECREMENT_QUANTITY_OF_ADDITION_OF_PRODUCT,\n};\n\n\nexport const changeLanguage: changeLanguageType = (lang) => ({ type: CHANGE_LANGUAGE, lang });\n\nexport const addUser: addUserType = (role, code) => ({ type: ADD_USER, role, code });\n\nexport const logoutUser: logoutUserType = () => ({ type: LOGOUT_USER });\n\nexport const addToFormData = (fieldName: string, fieldValue: string) => ({ type: formDataActions.ADD_TO_FORM_DATA, fieldName, fieldValue });\n\nexport const updateAllFieldsOfFormData = (newState: any) => ({ type: formDataActions.UPDATE_ALL_FIELDS, newState });\n\nexport const clearAllFields = () => ({ type: formDataActions.CLEAR_ALL_FIELDS });\n\nexport const addProductToCart = (id: number, article: string, productName: string, price: number, tax: '7' | '19') => \n  ({ type: cartProductsActions.ADD_PRODUCT_TO_CART, id, article, productName, price, tax });\n\nexport const addAdditionToProductInCart = (productId: number, additionId: number, additionName: string, additionPrice: number, additionTax: '7' | '19') => \n  ({ type: cartProductsActions.ADD_ADDITION_TO_PRODUCT_IN_CART, productId, additionId, additionName, additionPrice, additionTax });\n\nexport const deleteProductFromCart = (productId: number) => \n  ({ type: cartProductsActions.DELETE_PRODUCT_FROM_CART, productId });\n\nexport const deleteAdditionOfProductFromCart = (productId: number, additionId: number) => \n  ({ type: cartProductsActions.DELETE_ADDITION_OF_PRODUCT_FROM_CART, productId, additionId });\n\nexport const incrementQuantityOfProductInCart = (productId: number) => ({ type: cartProductsActions.INCREMENT_QUANTITY_OF_PRODUCT_IN_CART, productId });\n\nexport const decrementQuantityOfProductInCart = (productId: number) => ({ type: cartProductsActions.DECREMENT_QUANTITY_OF_PRODUCT_IN_CART, productId });\n\nexport const incrementQuantityOfAdditionOfProduct = (productId: number, additionId: number) => \n  ({ type: cartProductsActions.INCREMENT_QUANTITY_OF_ADDITION_OF_PRODUCT, productId, additionId });\n\nexport const decrementQuantityOfAdditionOfProduct =  (productId: number, additionId: number) => \n  ({ type: cartProductsActions.DECREMENT_QUANTITY_OF_ADDITION_OF_PRODUCT, productId, additionId });\n","const fieldNames: fieldNamesInterface = {\n  customerNumber: 'customerNumber',\n  phoneNumber: 'phoneNumber',\n  name: 'name',\n  street: 'street',\n  houseNumber: 'houseNumber',\n  plz: 'plz',\n  city: 'city',\n  clientComment: 'clientComment',\n  deliveryCost: 'deliveryCost',\n  article: 'article',\n  quantity: 'quantity',\n  productName: 'productName',\n  price: 'price'\n};\n\nexport interface fieldNamesInterface {\n  customerNumber: string,\n  phoneNumber: string,\n  name: string,\n  street: string,\n  houseNumber: string,\n  plz: string,\n  city: string,\n  clientComment: string,\n  deliveryCost: string,\n  article: string;\n  quantity: string;\n  productName: string;\n  price: string;\n};\n\nexport default fieldNames;\n","export const selectValues = ['0,00', '0,50', '1,00', '1,50', '2,00', '2,50', '3,00'];\n","import { CHANGE_LANGUAGE, ADD_USER, LOGOUT_USER, formDataActions, cartProductsActions } from './actions';\n\nimport fieldNames from '../constants/fieldNames';\nimport { selectValues } from '../constants/selectValues';\n\nimport {\n  LanguagesState,\n  LanguageAction,\n  UserState,\n  UserAction,\n  FormDataStateType,\n  FormDataStateAction,\n  CartProductsState,\n  CartProductsAction\n} from './reducersTypes';\n\nexport const languages = (state: LanguagesState = { lang: 'ru' }, action: LanguageAction) => {\n  switch (action.type) {\n    case CHANGE_LANGUAGE:\n      return { lang: action.lang };\n    default: return state;\n  }\n};\n\nexport const user = (state: UserState = { role: '', code: '' }, action: UserAction) => {\n  switch (action.type) {\n    case ADD_USER: {\n      const { role, code } = action;\n      return { role, code };\n    };\n    case LOGOUT_USER: {\n      return {\n        ...state,\n        role: ''\n      };\n    }\n    default: return state;\n  }\n};\n\nexport const initialFormDataState: any = {//TODO: add types\n  [fieldNames.customerNumber]: '',\n  [fieldNames.phoneNumber]: '',\n  [fieldNames.customerNumber]: '',\n  [fieldNames.phoneNumber]: '',\n  [fieldNames.name]: '',\n  [fieldNames.street]: '',\n  [fieldNames.houseNumber]: '',\n  [fieldNames.plz]: '',\n  [fieldNames.city]: '',\n  [fieldNames.clientComment]: '',\n  [fieldNames.deliveryCost]: selectValues[0]\n};\n\nexport const formDataState = (state: FormDataStateType = initialFormDataState, action: FormDataStateAction) => {\n  switch (action.type) {\n    case formDataActions.ADD_TO_FORM_DATA:\n      return {\n        ...state,\n        [action.fieldName]: action.fieldValue\n      };\n    case formDataActions.UPDATE_ALL_FIELDS: {\n      const newState = { ...state };\n      for (let [key, value] of Object.entries(action.newState)) {\n        newState[key] = value;\n      };\n      return newState;\n    };\n    case formDataActions.CLEAR_ALL_FIELDS:\n      return { ...initialFormDataState };\n    default:\n      return state;\n  };\n};\n\nexport const initialCartProductsState = [];\n\nexport const cartProducts = (state: CartProductsState = initialCartProductsState, action: CartProductsAction) => {\n  switch (action.type) {\n\n    case cartProductsActions.ADD_PRODUCT_TO_CART: {\n      const { id, article, productName, price, tax } = action;\n\n      const articleIndex = state.findIndex(({ id: newStateId }) => newStateId === id);\n      if (articleIndex !== -1) {\n        const prevQuantity = state[articleIndex].quantity;\n        return [...state.slice(0, articleIndex), { ...state[articleIndex], quantity: prevQuantity + 1 }, ...state.slice(articleIndex + 1)]\n      } else {\n        return [...state, { id, article, productName, price, tax, quantity: 1 }]\n      }\n    }\n\n    case cartProductsActions.ADD_ADDITION_TO_PRODUCT_IN_CART: {\n      const { productId, additionId, additionName, additionPrice, additionTax } = action;\n      const productIndex = state.findIndex(({ id }) => id === productId);\n      if (productIndex !== -1) {\n        const oldAdditions = state[productIndex].additions;\n        if (state[productIndex] && Array.isArray(oldAdditions)) {\n          const additionArticleIndex = oldAdditions.findIndex(({ id }) => id === additionId);\n          if (additionArticleIndex !== -1 && Array.isArray(state[productIndex].additions)) {\n            const prevQiantity = oldAdditions[additionArticleIndex].quantity;\n            return [\n              ...state.slice(0, productIndex),\n              {\n                ...state[productIndex], additions: [\n                  ...oldAdditions.slice(0, additionArticleIndex),\n                  { ...oldAdditions[additionArticleIndex], quantity: prevQiantity + 1 },\n                  ...oldAdditions.slice(additionArticleIndex + 1)\n                ]\n              },\n              ...state.slice(productIndex + 1)\n            ];\n          } else {\n            const productAdditions = state[productIndex].additions;\n            if (productAdditions !== undefined) {\n              return [\n                ...state.slice(0, productIndex),\n                {\n                  ...state[productIndex], additions: [\n                    ...productAdditions,\n                    { id: additionId, productName: additionName, price: additionPrice, tax: additionTax, quantity: 1 }\n                  ]\n                },\n                ...state.slice(productIndex + 1)\n              ];\n            } else {\n              return [\n                ...state.slice(0, productIndex),\n                {\n                  ...state[productIndex], additions: [\n                    { id: additionId, productName: additionName, price: additionPrice, tax: additionTax, quantity: 1 },\n                  ]\n                },\n                ...state.slice(productIndex + 1)\n              ];\n            }\n          }\n        } else {\n          return [\n            ...state.slice(0, productIndex),\n            {\n              ...state[productIndex], additions: [\n                { id: additionId, productName: additionName, price: additionPrice, tax: additionTax, quantity: 1 },\n              ]\n            },\n            ...state.slice(productIndex + 1)\n          ];\n        }\n      }\n      return state;\n    }\n    /* FIXME TESTS */\n    case cartProductsActions.DELETE_PRODUCT_FROM_CART: {\n      const { productId } = action;\n      return state.filter(({ id }) => id !== productId);\n    }\n\n    case cartProductsActions.DELETE_ADDITION_OF_PRODUCT_FROM_CART: {\n      const { productId, additionId } = action;\n      const productIndex = state.findIndex(({ id }) => id === productId);\n      if (productIndex !== -1) {\n        const additions = state[productIndex].additions;\n        if (additions) {\n          return [\n            ...state.slice(0, productIndex),\n            { ...state[productIndex], additions: additions.filter(({ id }) => id !== additionId) },\n            ...state.slice(productIndex + 1)\n          ]\n        }\n      }\n      return state;\n    }\n    /* END FIXME */\n    case cartProductsActions.INCREMENT_QUANTITY_OF_PRODUCT_IN_CART: {\n      const { productId } = action;\n      const productIndex = state.findIndex(({ id }) => id === productId);\n      if (productIndex !== -1) {\n        return [\n          ...state.slice(0, productIndex),\n          { ...state[productIndex], quantity: state[productIndex].quantity + 1 },\n          ...state.slice(productIndex + 1)\n        ]\n      }\n      return state;\n    }\n\n    case cartProductsActions.DECREMENT_QUANTITY_OF_PRODUCT_IN_CART: {\n      const { productId } = action;\n      const productIndex = state.findIndex(({ id }) => id === productId);\n      if (productIndex !== -1) {\n        const currentQuantity = state[productIndex].quantity;\n        if (currentQuantity > 1) {\n          return [\n            ...state.slice(0, productIndex),\n            { ...state[productIndex], quantity: currentQuantity - 1 },\n            ...state.slice(productIndex + 1)\n          ]\n        } else {\n          return [\n            ...state.slice(0, productIndex),\n            ...state.slice(productIndex + 1)\n          ]\n        }\n      }\n      return state;\n    }\n\n    case cartProductsActions.INCREMENT_QUANTITY_OF_ADDITION_OF_PRODUCT: {\n      const { productId, additionId } = action;\n      const productIndex = state.findIndex(({ id }) => productId === id);\n      if (productIndex !== -1) {\n        const additions = state[productIndex].additions;\n        if (additions) {\n          const additionIndex = additions.findIndex(({ id }) => id === additionId);\n          if (additionIndex !== -1) {\n            const addition = additions[additionIndex];\n            return [\n              ...state.slice(0, productIndex),\n              {\n                ...state[productIndex], additions: [\n                  ...additions.slice(0, additionIndex),\n                  { ...addition, quantity: addition.quantity + 1 },\n                  ...additions.slice(additionIndex + 1)\n                ]\n              },\n              ...state.slice(productIndex + 1)\n            ]\n          }\n        }\n      }\n      return state;\n    }\n\n    case cartProductsActions.DECREMENT_QUANTITY_OF_ADDITION_OF_PRODUCT: {\n      const { productId, additionId } = action;\n      const productIndex = state.findIndex(({ id }) => id === productId);\n      if (productIndex !== -1) {\n        const additions = state[productIndex].additions;\n        if (additions) {\n          const additionIndex = additions.findIndex(({ id }) => id === additionId);\n          if (additionIndex !== -1) {\n            const addition = additions[additionIndex];\n            if (addition.quantity > 1) {\n              return [\n                ...state.slice(0, productIndex),\n                {\n                  ...state[productIndex], additions: [\n                    ...additions.slice(0, additionIndex),\n                    { ...addition, quantity: addition.quantity - 1 },\n                    ...additions.slice(additionIndex + 1)\n                  ]\n                },\n                ...state.slice(productIndex + 1)\n              ]\n            } else {\n              return [\n                ...state.slice(0, productIndex),\n                {\n                  ...state[productIndex], additions: [\n                    ...additions.slice(0, additionIndex),\n                    ...additions.slice(additionIndex + 1)\n                  ]\n                },\n                ...state.slice(productIndex + 1)\n              ]\n            }\n          }\n        }\n      }\n      return state;\n    }\n    default:\n      return state;\n  }\n}\n","import { combineReducers, createStore } from 'redux';\nimport { languages, user, formDataState, cartProducts } from './reducers';\n\nexport const appState = combineReducers({ languages, user, formDataState, cartProducts } as any);\nconst testIsNew = localStorage.getItem('testIndex') && JSON.parse(localStorage.getItem('testIndex') as string);\nconst initialState = testIsNew ? JSON.parse(localStorage.getItem('pizza-redux') as string) : null;\nlet store = initialState ? createStore(appState, initialState) : createStore(appState);\nlocalStorage.setItem('testIndex', JSON.stringify(true));\nstore.subscribe(() => localStorage.setItem('pizza-redux', JSON.stringify(store.getState())));\n\nexport default store;\n\n","const fakeBD = {\n    customers: [\n        {\n            customerNumber: 1\n        },\n        {\n            customerNumber: 2\n        },\n        {\n            customerNumber: 3\n        },\n        {\n            customerNumber: 33,\n            phoneNumber: 89821251216,\n            deliveryCost: '2,50',\n            name: 'Дмитрий',\n            street: 'Уличная',\n            houseNumber: '16',\n            plz: '123456',\n            city: 'Москва',\n        },\n        {\n            customerNumber: 333\n        }\n    ],\n    products: [\n        {\n            id: 1,\n            article: '1',\n            productName: 'Pizza Margherita',\n            price: 10.00,\n            tax: '19',\n            type: 'product'\n        },\n        {\n            id: 2,\n            article: '1k',\n            productName: 'Pizza Margherita klein',\n            price: 5.0,\n            tax: '19',\n            type: 'product'\n        },\n        {\n            id: 3,\n            article: '105',\n            productName: 'Salat Capri',\n            price: 10.00,\n            tax: '7',\n            type: 'product'\n        },\n        {\n            id: 4,\n            article: '105g',\n            productName: 'Salat capri groß',\n            price: 15.00,\n            tax: '7',\n            type: 'product'\n        },\n        {\n            id: 5,\n            productName: 'Ananas',\n            price: 1.00,\n            tax: '19',\n            type: 'addition'\n        },\n        {\n            id: 6,\n            productName: 'Salami',\n            price: 0.50,\n            tax: '19',\n            type: 'addition'\n        },\n        {\n            id: 7,\n            productName: 'kl. Tomaten',\n            price: 0.50,\n            tax: '19',\n            type: 'addition'\n        },\n        {\n            id: 8,\n            productName: 'ohne Zwiebeln',\n            price: 0.00,\n            tax: '19',\n            type: 'addition'\n        },\n        {\n            id: 9,\n            productName: 'extra Käse',\n            price: 1.00,\n            tax: '7',\n            type: 'addition'\n        },\n        {\n            id: 10,\n            productName: 'extra Käse gross',\n            price: 1.50,\n            tax: '7',\n            type: 'addition'\n        }\n    ]\n\n};\nexport const auth = (login: string, password: string) => {\n    if (login === 'test' && password === 'test') {\n        return { role: 'admin' };\n    }\n    return null;\n}\n\nexport const searchProducts: any = (searchString: string) => {\n    if (searchString === '') {\n        return fakeBD.products.slice(0, 10);\n    }\n    searchString = searchString.toLowerCase();\n    const res = fakeBD.products.filter((product) => {\n        const { article, productName } = product;\n        const isProduct = (article && article.toLowerCase().includes(searchString.toLowerCase())) || productName.toLowerCase().includes(searchString.toLowerCase());\n        return isProduct;\n    });\n    return res;\n}\nexport default fakeBD;\n","import ru from './ru';\nimport de from './de';\n\nexport type langType = 'ru' | 'de';\n\nexport type langMapType = {\n  'ru': typeof ru,\n  'de': typeof de\n};\n\nexport const langMap: langMapType = {\n  'ru': ru,\n  'de': de\n};\n","const ru = {\n    authTitle: 'Авторизация',\n    organizationNumber: 'Номер организации',\n    username: 'Имя пользователя',\n    password: 'Пароль',\n    autoLogin: 'Запомнить меня',\n    login: 'Войти',\n    tableOrders: 'Tischbestellungen', //TODO: Перевод\n    selfPickUp: 'Selbstabholer', //TODO: Перевод\n    sales: 'Hausverkauf', //TODO: Перевод\n    phoneMonitor: 'Telefon monitor', //TODO: Перевод\n    customerNumber: 'Номер клиента',\n    phoneNumber: 'Номер телефона',\n    name: 'Имя',\n    street: 'Улица',\n    houseNumber: 'Номер дома',\n    plz: 'Почтовый индекс',\n    city: 'Город',\n    clientComment: 'Комментарий клиента',\n    deliveryCost: 'Доставка',\n    clear: 'Очистить',\n    goToOrder: 'Продолжить заказ',\n    logout: 'Выйти',\n    callForm: 'Доставка',\n    allOrders: 'Все заказы',\n    cookingMonitor: 'Монитор кухни',\n    carMonitor: 'Монитор доставки',\n    report: 'Отчет',\n    settings: 'Настройки',\n    help: 'Помощь',\n    quantity: 'Кол-во',\n    article: 'Арт.',\n    productName: 'Номенклатура',\n    price: 'Цена',\n    back: 'Назад',\n    freeDelivery: 'Бесплатная доставка',\n    print: 'Печать',\n    comment: 'Комментарий заказчика',\n    goods: 'Товары',\n    additions: 'Добавки',\n    discount: 'Скидка',\n    totalPrice: 'Общая цена',\n    tax_7: 'Налог 7%',\n    tax_19: 'Налог 19%',\n    articlePrices: 'Номенклатура'\n};\n\nexport default ru;\n","const de = {\n    authTitle: 'Restaurant-Login',\n    organizationNumber: 'Kundennumer',\n    username: 'Benutzername',\n    password: 'Passwort',\n    autoLogin: 'Automatisch Anmelden',\n    login: 'Login',\n    tableOrders: 'Tischbestellungen',\n    selfPickUp: 'Selbstabholer',\n    sales: 'Hausverkauf',\n    phoneMonitor: 'Telefon monitor',\n    customerNumber: 'Kundennummer',\n    phoneNumber: 'Telefonnumer',\n    name: 'Name',\n    street: 'Strasse',\n    houseNumber: 'Hausnummer',\n    plz: 'PLZ',\n    city: 'Stadt',\n    clientComment: 'Bemerkung',\n    deliveryCost: 'Anfahrtskosten',\n    clear: 'Löschen',\n    goToOrder: 'Bestellung',\n    logout: 'Logout',\n    callForm: 'Lieferdienst',\n    allOrders: 'Alle Bestellungen',\n    cookingMonitor: 'Kuchen monitor',\n    carMonitor: 'Fahrer monitor',\n    report: 'Berichten',\n    settings: 'Einstellungen',\n    help: 'Hilfe',\n    quantity: 'Anzahl',\n    article: 'Karte Nr.',\n    productName: 'Name von Artiel',\n    price: 'Preise',\n    back: 'Zuruck',\n    freeDelivery: 'Anfahrtkosten Frei',\n    print: 'Drucken',\n    comment: 'Hinweis',\n    goods: 'Artikel',\n    additions: 'Zutaten',\n    discount: 'Rabatt',\n    totalPrice: 'Gesamt preis',\n    tax_7: 'MWST 7%',\n    tax_19: 'MWST 19%',\n    articlePrices: 'Artikel'\n};\n\nexport default de;\n","export const ROOT_URL = '';\n","import React, { useReducer, useEffect, useCallback, useState } from 'react';\nimport { Button, Form, Input, AutoComplete, Select, Divider, Card, Layout } from 'antd';\n\nimport { withRouter } from 'react-router-dom';\nimport { connect, MapDispatchToPropsNonObject, MapStateToPropsParam } from 'react-redux';\n\n//types\nimport { DeliveryFormProps } from './DeliveryFormTypes';\nimport { langType } from '../../lang';\n\nimport fakeBD from '../../fakeBD';\nimport { langMap } from '../../lang';\n\nimport fieldNames from '../../constants/fieldNames';\nimport { selectValues } from '../../constants/selectValues';\n\nimport { initialFormDataState } from '../../redux/reducers';\nimport { addToFormData, updateAllFieldsOfFormData, clearAllFields } from '../../redux/actions';\nimport { Action } from 'redux';\n\nimport { ROOT_URL } from '../../constants/rootUrl';\n\nconst { Header, Content } = Layout;\n\nconst { Option } = Select;\n\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 12 },\n    lg: { span: 12 },\n    xl: { span: 12 },\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 12 },\n    lg: { span: 12 },\n    xl: { span: 12 }\n  },\n};\n\nconst dataSourceActions = {\n  ADD_TO_DATA_SOURCE: 'ADD_TO_DATA_SOURCE'\n};\n\ntype dataSourceReducerTypes = typeof dataSourceActions.ADD_TO_DATA_SOURCE;\ninterface dataSourceReducerAction extends Action<dataSourceReducerTypes> {\n  dataSourceName: string;\n  dataSourceData: string[];\n};\n\nfunction dataSourceReducer(state: any, action: dataSourceReducerAction) {//FIXME\n  switch (action.type) {\n    case dataSourceActions.ADD_TO_DATA_SOURCE: {\n      return {\n        ...state,\n        [action.dataSourceName]: action.dataSourceData\n      }\n    }\n  }\n};\n\n\nconst addToDataSource = (dataSourceName: string, dataSourceData: string[]) => ({ type: dataSourceActions.ADD_TO_DATA_SOURCE, dataSourceName, dataSourceData });\n\n\n\nconst initialDataSourceState: any = {//TODO: add types\n  [fieldNames.customerNumber]: [],\n  [fieldNames.phoneNumber]: [],\n  [fieldNames.customerNumber]: [],\n  [fieldNames.phoneNumber]: [],\n  [fieldNames.name]: [],\n  [fieldNames.street]: [],\n  [fieldNames.houseNumber]: [],\n  [fieldNames.plz]: [],\n  [fieldNames.city]: [],\n  [fieldNames.clientComment]: [],\n  [fieldNames.deliveryCost]: []\n};\n\nconst tryToFetchUser = (fieldId: string, fieldValue: string) => fakeBD.customers.find((customer: any) =>  customer[fieldId] && customer[fieldId].toString() === fieldValue);\n\nconst compareTwoObjects = (object1: any, object2: any) => {\n  if (Object.keys(object1).length !== Object.keys(object2).length)\n    return false;\n  for (let [key, value] of Object.entries(object1)) {\n    if (object2[key] !== value)\n      return false;\n  };\n  return true;\n}\n\n\nconst mapDispatchToProps: MapDispatchToPropsNonObject<any, any> = (dispatch) => ({\n  addDataToFormData(id: string, value: string) {\n    dispatch(addToFormData(id, value))\n  },\n  updateFieldsOfFormData(newState: any) {\n    dispatch(updateAllFieldsOfFormData(newState));\n  },\n  clearFields() {\n    dispatch(clearAllFields());\n  }\n});\n\nconst mapStateToProps: MapStateToPropsParam<any, any, any> = (state) => ({ formDataState: state.formDataState, lang: state.languages.lang });\n\nconst DeliveryForm = Form.create<DeliveryFormProps>(\n  { name: 'delivery_form' }\n)(connect(mapStateToProps, mapDispatchToProps)(withRouter((\n  { lang, formDataState, addDataToFormData, clearFields, updateFieldsOfFormData, form: { getFieldDecorator, setFieldsValue, getFieldsValue }, form, history }: any) => {\n\n  const [dataSourceState, dispatchToDataSource] = useReducer(dataSourceReducer, initialDataSourceState);\n  const [dataSourceLiveState, dispatchToDataSourceLive] = useReducer(dataSourceReducer, initialDataSourceState);\n  const [language, setLanguage] = useState(langMap[lang as langType]);\n\n  const onFieldChange = useCallback((id: string, value: string) => {\n    addDataToFormData(id, value);\n  }, [addDataToFormData]);\n\n  const handleSearch = useCallback((arg: string, id: string) => {\n    updateFieldsOfFormData(getFieldsValue());\n    if (!dataSourceState[id].length) {\n      const fetched = fakeBD.customers.map(({ [id]: value }: any) => value && value.toString());\n      dispatchToDataSource(addToDataSource(id, fetched));//TODO: add types\n      dispatchToDataSourceLive(addToDataSource(id, fetched.filter((item: string) => item && item.startsWith(arg))));\n    } else {\n      dispatchToDataSourceLive(addToDataSource(id, dataSourceState[id].filter((item: string) => item && item.startsWith(arg))));\n    }\n  }, [updateFieldsOfFormData, getFieldsValue, dataSourceState, dispatchToDataSource, dispatchToDataSourceLive]);\n\n  const nextPage = useCallback(() => {\n    form.validateFields((err: any) => {\n      if (!err) {\n        history.push(`${ROOT_URL}/finish`);\n      }\n    });\n  }, [form, history]);\n\n  const handleClearClick = useCallback(() => {\n    setFieldsValue(initialFormDataState);\n    clearFields();\n  }, [setFieldsValue, clearFields]);\n\n  const handleSubmit = useCallback((e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    nextPage();\n  }, [nextPage]);\n\n  const handleEscDown = useCallback((e: any) => {\n    if (e.key === 'Escape') {\n      handleClearClick();\n    } else if (e.key === 'F2') {\n      nextPage();\n    }\n  }, [handleClearClick, nextPage]);\n\n  const handleEnterDown = useCallback((id: string, value: string) => {\n    const customer = tryToFetchUser(id, value);\n    if (customer) {\n      setFieldsValue(customer);\n      updateFieldsOfFormData(customer);\n    }\n  }, [setFieldsValue, updateFieldsOfFormData]);\n\n  useEffect(() => {\n    setLanguage(langMap[lang as langType]);\n  }, [lang]);\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleEscDown);\n    return () => window.removeEventListener('keydown', handleEscDown);\n  }, [handleEscDown]);\n\n  useEffect(() => {\n    if (compareTwoObjects(getFieldsValue(), formDataState))\n      return;\n    setFieldsValue(formDataState);\n  }, [formDataState, setFieldsValue, getFieldsValue]);\n\n  return (\n    <Layout>\n      <Header style={{ background: '#fff', marginTop: '24px', height: 'auto', display: 'flex', flexFlow: 'row nowrap', justifyContent: 'space-around' }}>\n        <Button type=\"dashed\" size=\"large\">{language.tableOrders}</Button>\n        <Button type=\"dashed\" size=\"large\">{language.selfPickUp}</Button>\n        <Button type=\"dashed\" size=\"large\">{language.sales}</Button>\n        <Button type=\"dashed\" size=\"large\">{language.phoneMonitor}</Button>\n      </Header>\n      <Divider />\n      <Content style={{ margin: '0 16px', background: 'inherit' }}>\n        <div>\n          <Form onSubmit={handleSubmit} onKeyDown={handleEscDown}  {...formItemLayout}>\n            <Card style={{ width: '60%', maxWidth: '500px' }}>\n              <Form.Item label={language.customerNumber}>\n                {getFieldDecorator(fieldNames.customerNumber, {\n                  rules: [\n                    { required: true, message: 'Введите номер клиента' },\n                    { pattern: /[0-9]+/, message: 'Разрешены только цифры' }\n                  ]\n                })(\n                  <AutoComplete\n                    dataSource={dataSourceLiveState[fieldNames.customerNumber]}\n                    onSearch={(arg) => handleSearch(arg, fieldNames.customerNumber)}\n                    onSelect={(value) => handleEnterDown(fieldNames.customerNumber, value as string)}\n                  >\n                    <Input onKeyDown={handleEscDown} maxLength={6} id={fieldNames.customerNumber} />\n                  </AutoComplete>)}\n              </Form.Item>\n              <Form.Item label={language.phoneNumber}>\n                {getFieldDecorator(fieldNames.phoneNumber, {\n                  rules: [\n                    { required: true, message: 'Введите номер телефона клиента' },\n                    { pattern: /[0-9]+/, message: 'Разрешены только цифры' }\n                  ]\n                })(\n                  <AutoComplete\n                    dataSource={dataSourceLiveState[fieldNames.phoneNumber]}\n                    onSearch={(arg) => handleSearch(arg, fieldNames.phoneNumber)}\n                    onSelect={(value) => handleEnterDown(fieldNames.phoneNumber, value as string)}\n                  >\n                    <Input onKeyDown={handleEscDown} autoFocus={true} maxLength={15} id={fieldNames.phoneNumber} />\n                  </AutoComplete>)}\n              </Form.Item>\n              <Form.Item label={language.name}>\n                {getFieldDecorator(fieldNames.name, {\n                  rules: [\n                    { required: true, message: 'Введите имя клиента' }\n                  ]\n                })(\n                  <AutoComplete\n                    dataSource={dataSourceLiveState[fieldNames.name]}\n                    onSearch={(arg) => handleSearch(arg, fieldNames.name)}\n                    onSelect={(value) => handleEnterDown(fieldNames.name, value as string)}\n                  >\n                    <Input onKeyDown={handleEscDown} maxLength={30} id={fieldNames.name} />\n                  </AutoComplete>)}\n              </Form.Item>\n              <Form.Item label={language.city}>\n                {getFieldDecorator(fieldNames.city, {\n                  rules: [\n                    { required: true, message: 'Введите название города' }\n                  ]\n                })(<Input onKeyDown={handleEscDown} maxLength={25} id={fieldNames.city} />)}\n              </Form.Item>\n              <Form.Item label={language.street}>\n                {getFieldDecorator(fieldNames.street, {\n                  rules: [\n                    { required: true, message: 'Введите название улицы' }\n                  ]\n                })(<Input onKeyDown={handleEscDown} maxLength={30} id={fieldNames.street} />)}\n              </Form.Item>\n              <Form.Item label={language.houseNumber}>\n                {getFieldDecorator(fieldNames.houseNumber, {\n                  rules: [\n                    { required: true, message: 'Введите номер дома' },\n                    { pattern: /[0-9]+/, message: 'Разрешены только цифры' }\n                  ]\n                })(<Input onKeyDown={handleEscDown} maxLength={6} id={fieldNames.houseNumber} />)}\n              </Form.Item>\n              <Form.Item label={language.plz}>\n                {getFieldDecorator(fieldNames.plz, {\n                  rules: [\n                    { required: true, message: 'Введите почтовый индекс' },\n                    { pattern: /[0-9]+/, message: 'Разрешены только цифры' }\n                  ]\n                })(<Input onKeyDown={handleEscDown} maxLength={6} id={fieldNames.plz} />)}\n              </Form.Item>\n              <Form.Item label={language.clientComment}>\n                {getFieldDecorator(fieldNames.clientComment)(\n                  <Input onKeyDown={handleEscDown} maxLength={35} id={fieldNames.clientComment} />)}\n              </Form.Item>\n              <Form.Item label={language.deliveryCost}>\n                {getFieldDecorator(fieldNames.deliveryCost)(\n                  <Select onChange={(value: string) => onFieldChange(fieldNames.deliveryCost, value)} id={fieldNames.deliveryCost}>\n                    {selectValues.map(value => <Option key={value} value={value}>{value}</Option>)}\n                  </Select>)}\n              </Form.Item>\n            </Card>\n            <Divider />\n            <div style={{ display: 'flex', flexFlow: 'row nowrap', justifyContent: 'space-between' }}>\n              <Button type=\"danger\" size=\"large\" onClick={handleClearClick}>{language.clear} / ESC</Button>\n              <Form.Item>\n                <Button htmlType=\"submit\" type=\"primary\" size=\"large\">{language.goToOrder} / F2</Button>\n              </Form.Item>\n            </div>\n          </Form>\n        </div>\n      </Content>\n    </Layout >\n  )\n})));\n\nexport default DeliveryForm;\n","import React, { useState, useEffect } from 'react';\nimport { Form, Icon, Input, Button, Checkbox, Typography, Alert } from 'antd';\nimport { connect, MapDispatchToPropsFunction, MapStateToProps } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { RouteComponentProps } from 'react-router';\n\nimport './Auth.css';\n\nimport { auth } from '../../fakeBD';\n\nimport { addUser } from '../../redux/actions';\n\nimport { LoginFormProps, LoginFormOwnProps, LoginFormDispatchProps, LoginFormStateProps, LoginFormValues } from './types';\nimport { State } from '../../redux/types';\n\nimport { langMap } from '../../lang';\nimport { FormComponentProps } from 'antd/es/form';\n\nimport { ROOT_URL } from '../../constants/rootUrl';\n\nconst { Title } = Typography;\n\nexport const LoginForm = ({ form: { setFieldsValue, getFieldsValue, validateFields, getFieldDecorator }, history, lang, addUser, code, userRole }: LoginFormProps) => {\n  const [errMsg, setErrMsg] = useState('');\n  const [language, setLanguage] = useState(langMap[lang]);\n\n  useEffect(() => {\n    setFieldsValue({ code })\n  }, [setFieldsValue, code]);\n\n  useEffect(() => {\n    if (userRole) {\n      history.push(`${ROOT_URL}/menu`);\n    }\n  }, [history, userRole]);\n\n  useEffect(() => {\n    setLanguage(langMap[lang]);\n  }, [lang]);\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    validateFields((err: any, values: LoginFormValues) => {\n      const user = auth(values.username, values.password);\n      if (!err && user) {\n        addUser(user.role, getFieldsValue().code);\n        history.push(`${ROOT_URL}/menu`);\n      } else if (!user) {\n        setErrMsg('Вы неверно ввели логин или пароль');\n      }\n    });\n  };\n\n    return (\n        <div id=\"components-form-demo-normal-login\">\n        <Form onSubmit={handleSubmit} className=\"login-form\" autoComplete=\"off\">\n            <Title level={4} style={{textAlign: 'center'}}>{language.authTitle}</Title>\n            <Form.Item>\n            {getFieldDecorator('code', {\n                rules: [\n                  { required: true, message: 'Введите код' },\n                { pattern: /[0-9]+/, message: 'Разрешены только цифры'}\n              ],\n            })(\n                <Input\n                autoFocus\n                autoComplete=\"off\"\n                prefix={<Icon type=\"number\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                placeholder={language.organizationNumber}\n                />\n            )}\n            </Form.Item>\n            <Form.Item>\n            {getFieldDecorator('username', {\n                rules: [{ required: true, message: 'Введите имя пользователя' }],\n            })(\n                <Input\n                autoComplete=\"off\"\n                prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                placeholder={language.username}\n                />,\n            )}\n            </Form.Item>\n            <Form.Item>\n            {getFieldDecorator('password', {\n                rules: [{ required: true, message: 'Введите пароль' }],\n            })(\n                <Input\n                autoComplete=\"off\"\n                prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                type=\"password\"\n                placeholder={language.password}\n                />,\n            )}\n            </Form.Item>\n            <Form.Item>\n            {getFieldDecorator('remember', {\n                valuePropName: 'checked',\n                initialValue: true,\n            })(<Checkbox>{language.autoLogin}</Checkbox>)}\n            {errMsg && <div>\n                <Alert type=\"error\" message={errMsg}/>\n            </div>}\n            <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n                {language.login}\n            </Button>\n            </Form.Item>\n        </Form>\n      </div>\n    );\n}\n\nconst mapStatetoProps: MapStateToProps<LoginFormStateProps, LoginFormOwnProps, State> = (state) => {\n  return {\n    lang: state.languages.lang,\n    code: state.user.code,\n    userRole: state.user.role\n  }\n};\n\nconst mapDispatchToProps: MapDispatchToPropsFunction<LoginFormDispatchProps, LoginFormOwnProps> = (dispatch) => {\n  return {\n    addUser(role: string, code: string) {\n      dispatch(addUser(role, code));\n    }\n  }\n};\n\nexport const Auth = connect(mapStatetoProps, mapDispatchToProps)(Form.create<FormComponentProps<LoginFormOwnProps>>({ name: 'normal_login' })(withRouter<RouteComponentProps<LoginFormOwnProps & LoginFormDispatchProps & LoginFormStateProps, any, any>, any>(LoginForm)));\n","import React, { useCallback, useEffect, useState } from 'react';\n\nimport { Input, Form } from 'antd';\nimport { connect } from 'react-redux';\nimport { mapStateToProps, mapDispatchToProps } from './reduxProvider';\nimport { SumFormProps } from './SumFormTypes';\nimport { langMap } from '../../../lang';\n\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 12 },\n    lg: { span: 12 },\n    xl: { span: 12 },\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 12 },\n    lg: { span: 12 },\n    xl: { span: 12 }\n  },\n};\n\nconst SumForm = Form.create({ name: 'cart' })(connect(mapStateToProps, mapDispatchToProps)(({ lang, form: { getFieldDecorator, setFieldsValue }, addDataToFormData,\n  formDataState: {\n    mwst_7,\n    mwst_19,\n    greichten,\n    zutaten,\n    deliveryCost,\n    discount,\n    total_price\n  } }: SumFormProps) => {\n  const [language, setLanguage] = useState(langMap[lang]);\n  const onDeliveryCostChange = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    addDataToFormData('deliveryCost', event.target.value)\n  }, [addDataToFormData]);\n\n  const onDiscountChange = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    addDataToFormData('discount', event.target.value)\n  }, [addDataToFormData]);\n\n  useEffect(() => {//синхронизируем redux-store и форму\n    setFieldsValue({\n      mwst_7,\n      mwst_19,\n      greichten,\n      zutaten,\n      deliveryCost,\n      discount,\n      total_price\n    });\n  }, [mwst_7, mwst_19, greichten, zutaten, deliveryCost, discount, total_price, setFieldsValue]);\n\n  useEffect(() => {\n    setLanguage(langMap[lang]);\n  }, [lang]);\n\n  return (\n    <Form {...formItemLayout} className=\"sum-form\">\n      <div className=\"cart__sum\">\n        <div className=\"sum__item sum__item_flex-start\">\n          <Form.Item label={language.tax_7}>\n            {getFieldDecorator('mwst_7')(\n              <Input placeholder={language.tax_7} id=\"mwst_7\" disabled suffix=\"€\" />\n            )}\n          </Form.Item>\n          <Form.Item label={language.tax_19}>\n            {getFieldDecorator('mwst_19')(\n              <Input placeholder={language.tax_19} id=\"mwst_19\" disabled suffix=\"€\" />\n            )}\n          </Form.Item>\n        </div>\n        <div className=\"sum__item\">\n          <Form.Item label={language.articlePrices}>\n            {getFieldDecorator('greichten')(\n              <Input placeholder={language.articlePrices} id=\"greichten\" disabled suffix=\"€\" />\n            )}\n          </Form.Item>\n          <Form.Item label={language.additions}>\n            {getFieldDecorator('zutaten')(\n              <Input placeholder={language.additions} id=\"zutaten\" disabled suffix=\"€\" />\n            )}\n          </Form.Item>\n          <Form.Item label={language.deliveryCost}>{getFieldDecorator('deliveryCost')(<Input onChange={onDeliveryCostChange} placeholder={language.deliveryCost} suffix=\"€\" />)}</Form.Item>\n          <Form.Item label={`F11 / ${language.discount}`}>{getFieldDecorator('discount')(<Input onChange={onDiscountChange} placeholder={`F11 / ${language.discount}`} suffix=\"%\" />)}</Form.Item>\n          <Form.Item label={language.totalPrice}>{getFieldDecorator('total_price')(<Input id=\"total_price\" placeholder={language.totalPrice} disabled suffix=\"€\" />)}</Form.Item>\n        </div>\n      </div>\n    </Form>\n  )\n}));\n\nexport default SumForm;\n","import { addToFormData } from '../../../redux/actions';\nimport { State } from '../../../redux/types';\nimport { MapDispatchToPropsFunction, MapStateToProps } from 'react-redux';\nimport { SumFormOwnProps, SumFormStateProps, SumFormDispatchProps } from './SumFormTypes';\n\nexport const mapStateToProps: MapStateToProps<SumFormStateProps, SumFormOwnProps, State> = (state) => {\n  return {\n    cartProducts: state.cartProducts,\n    formDataState: state.formDataState,\n    lang: state.languages.lang\n  }\n};\n\nexport const mapDispatchToProps: MapDispatchToPropsFunction<SumFormDispatchProps, SumFormOwnProps> = (dispatch) => {\n  return {\n    addDataToFormData(id: string, value: string) {\n      dispatch(addToFormData(id, value))\n    },\n  }\n};\n","import React, { useState, useCallback, useEffect, useMemo } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport { Table, Icon, Input, Button, Alert } from 'antd';\nimport SumForm from './subcomponents/SumForm';\n\nimport { langMap } from '../../lang';\n\nimport fakeBD, { searchProducts } from '../../fakeBD';\n\n//redux actions\nimport { mapStateToProps, mapDispatchToProps } from './reduxProvider';\n\n//types\nimport { RouteComponentProps } from 'react-router';\nimport { CartOwnProps, CartProps, CartDispatchProps, CartStateProps, ActionColumn, TableProduct, TableCart } from './CartTypes';\n\nimport './Cart.css';\n\nimport { ROOT_URL } from '../../constants/rootUrl';\n\nconst naturalSort: any = require('javascript-natural-sort');\n\n\n\nconst proudctsTableScrollParams = { y: 'calc(100vh - 40px - 32px - 75px - 60px - 1px)' };\nconst cartTableScrollParams = { y: 'calc(100vh - 40px - 32px - 75px - 60px - 240px - 1px - 20px)' };\nconst IconStyle = { fontSize: '16px' };\n\nconst selectSearchInputText = () => {//функция для выделения текста в поле поиска\n  const target = document.querySelector('.cart__products-table .ant-input') as HTMLInputElement;\n  target.focus();\n  (target).setRangeText(target.value, 0, target.value.length, 'select');\n};\n\nconst ProductNameRenderer = (name: string) => {//компонент корзины с названием товара/добавки\n  const testStr = name.match(/^([+]{1}[0-9]*)(.*)/);\n  if (testStr) {\n    const [, quantity, additionName] = testStr;\n    return (<div className=\"addition\"><span className=\"addition__quantity\">{quantity}</span>{additionName}</div>);\n  }\n  return (name);\n};\n\nconst NullComponent = () => null;//вспомогательный компонент, который ничего не рендерит\n\nconst scrollToCurrentSelectedItem = () => {//функция, которая скроллит до текущего выбранного товара/добавки\n  const curItem = document.querySelector('.didolf');\n  if (curItem) {\n    curItem.scrollIntoView();\n  }\n}\n\nfunction Cart({ cartProducts, addDataToFormData, formDataState: { discount = 0 }, formDataState, lang, addProduct, addAddition, deleteProduct, deleteAddition, decrementAddition, decrementProduct, history }: CartProps) {\n  const [language, setLanguage] = useState(langMap[lang]);\n  const [products, setProducts] = useState(searchProducts('') as TableProduct[]);\n  const [search, setSearch] = useState('');\n  const [isAlert, setIsAlert] = useState(false);\n  const [alertMessage, setAlertMessage] = useState({ message: '', description: '' });\n  const [currentSelection, setCurrentSelection] = useState(0);\n  const [currentSelectedProductInCart, setProductInCart] = useState(0);\n  const [wasImplisitySetted, setWasImplicitySetted] = useState(false);\n\n  useEffect(() => {\n    if (!wasImplisitySetted && cartProducts[cartProducts.length - 1]) {\n      setProductInCart(cartProducts[cartProducts.length - 1].id);\n    }\n  }, [cartProducts]);\n\n  const sortedProducts = useMemo(() => {//сортируем продукты с бека\n    const unsortedProducts = products.sort((a, b) => {\n      if (a.article && b.article) {\n        return naturalSort(a, b);\n      } else if (!a.article && !b.article && a.productName && b.productName) {\n        return a.productName.localeCompare(b.productName);\n      }\n      return 0;\n    });\n    const formattedSearch = search.toLowerCase();\n    let newSelection: typeof currentSelection = 0;\n    for (let product of unsortedProducts) {\n      if ((product.article && product.article.toLowerCase().includes(formattedSearch)) || product.productName.toLowerCase().includes(formattedSearch)) {\n        newSelection = product.id;\n        break;\n      }\n    };\n    setCurrentSelection(newSelection);\n    return unsortedProducts;\n  }, [products, search, setCurrentSelection]);\n\n  const productsWithSelected = useMemo(() => {//обновляем выбранный сейчас товар в таблице с товарами\n    return sortedProducts.map((product) => {\n      if (product.id === currentSelection) {\n        product.selected = true;\n      } else if (product.selected) {\n        product.selected = undefined;\n      }\n      return product;\n    })\n  }, [sortedProducts, currentSelection]);\n  const filteredProducts = useMemo(() => [{ header: 'ПРОДУКТЫ' }, ...productsWithSelected.filter(({ type }) => type === 'product'), { header: 'ДОБАВКИ' }, ...productsWithSelected.filter(({ type }) => type === 'addition')], [productsWithSelected])\n  const keyDownListener = useCallback((event: KeyboardEvent) => {//слушаем нажатия Arrow Up и Down и на их основе пушим в currentSelection\n    event.stopPropagation();\n    let newSelectionArticle: typeof currentSelection = currentSelection;\n    const productIndex = sortedProducts.findIndex(({ id }) => id === currentSelection);//находим его индекс в правой таблице\n    if (event.code === 'ArrowUp') {\n      if (productIndex !== 0 && sortedProducts.length !== 1) {//если кроме текущего продукта есть еще другие и текущий продукт не первый\n        const { id } = sortedProducts[productIndex - 1];//выбираем предыдущий продукт\n        newSelectionArticle = id;//устанавливаем предыдущий продукт текущим\n      } else if (sortedProducts[sortedProducts.length - 1]) {\n        const newProduct = sortedProducts[sortedProducts.length - 1];\n        newSelectionArticle = newProduct.id;\n      }\n    } else {//ArrowDown\n      if (sortedProducts.length !== 1) {//если кроме текущего продукта есть еще другие и он не последний\n        newSelectionArticle = sortedProducts[(productIndex + 1) % sortedProducts.length].id;//устанавливаем следующий продукт текущим\n      }\n    }\n    setCurrentSelection(newSelectionArticle);\n  }, [sortedProducts, currentSelection, setCurrentSelection]);\n\n  const TableRow = useCallback(function TableRow(props: any) {//строка таблицы с товарами для выбора. Нужна для установки выбранным товара\n    let id: number, parentId: number;\n    const isSelected = props.children.find(({ props: { record: { selected } } }: any) => selected);\n    const isHeader = props.children.find(({ props: { record: { header } } }: any) => header);\n    const isInCart = props.children.find(({ props: { record: { cart } } }: any) => cart);\n    props.children.forEach(({ props: { record: { id: recordId, parentId: recordParentId } } }: any) => {\n      id = recordId;\n      parentId = recordParentId\n    });\n    console.log(props.children);\n    return (\n      <tr onClick={isInCart ? () => {setProductInCart(parentId || id); setWasImplicitySetted(true);} : () => null} className={`${props.className} ${isSelected ? \"didolf\" : \"\"} ${isHeader ? \"cart__table-header\" : \"\"}`}>\n        {(isHeader && isHeader.props.record.header) || props.children}\n      </tr>\n    )\n  }, []);\n  const customTableComponents = useMemo(() => ({ body: { row: TableRow } }), [TableRow]);//передается в prop components компонента Table чтобы использовать свою строку вместо дефолтной\n\n  const onMinusKeyDown = useCallback(() => {//слушаем нажатия клавиши '-' и изменяем товары в корзине на основе этого\n    selectSearchInputText();\n    const currentProduct = sortedProducts.find((product) => product.id === currentSelection);\n    if (!currentProduct) {\n      return;\n    }\n    const typeOfCurrentProduct = currentProduct.type;\n    if (typeOfCurrentProduct === 'addition') {\n      const lastAddedProduct = cartProducts.find(({ id }) => id === currentSelectedProductInCart);\n      if (!lastAddedProduct) {\n        return;\n      }\n      const hasAddition = lastAddedProduct.additions && lastAddedProduct.additions.find(({ id }) => id === currentProduct.id);\n      if (hasAddition) {\n        decrementAddition(lastAddedProduct.id, currentProduct.id);\n      } else {\n        setAlertMessage({ message: 'Не удалось уменьшить количество добавки', description: 'Добавки нет в корзине' });\n        setIsAlert(true);\n      }\n    } else if (typeOfCurrentProduct === 'product') {\n      const isProductInCart = cartProducts.find(({ id }) => id === currentProduct.id);\n      if (isProductInCart) {\n        decrementProduct(currentProduct.id);\n      } else {\n        setAlertMessage({ message: 'Не удалось уменьшить количество товара', description: 'Товара нет в корзине' });\n        setIsAlert(true);\n      }\n    }\n  }, [cartProducts, currentSelection, decrementAddition, decrementProduct, setIsAlert, setAlertMessage]);\n\n  const onPlusOrEnterKeyDown = useCallback(() => {//слушаем нажатия '+' и 'enter' и изменяем товары в корзине на основе этого\n    if (isAlert) {\n      setIsAlert(false);\n      return;\n    }\n    const currentProduct = sortedProducts.find(({ id }) => id === currentSelection);\n    if (currentProduct) {\n      const { id, article, productName, price, tax, type } = currentProduct;\n      if (type === 'addition') {\n        const lastAddedProduct = cartProducts.find(({ id }) => id === currentSelectedProductInCart);\n        if (lastAddedProduct) {\n          addAddition(lastAddedProduct.id, id, productName, price, tax);// FIXME: Проверка на то, есть ли товар в корзине\n        } else {\n          setAlertMessage({ message: 'Не удалось выбрать добавку', description: 'Товаров нет в корзине' });\n          setIsAlert(true);\n        }\n      } else if (type === 'product') {\n        addProduct(id, article, productName, price, tax);// FIXME: Проверка на то, есть ли товар в корзине\n      }\n    }\n    selectSearchInputText();\n  }, [sortedProducts, isAlert, cartProducts, currentSelection, addAddition, addProduct, setIsAlert, setAlertMessage]);\n\n  const onSearchChange = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {//слушаем изменение строки поиска и убираем оттуда нажатие '-'\n    const lastChar = event.target.value.slice(-1);\n    if (lastChar === '-' || lastChar === '+') {\n      selectSearchInputText();\n      return;\n    } else {\n      setSearch(event.target.value);\n    }\n  }, [setSearch, onMinusKeyDown]);\n\n  const addToCart = useCallback((id: number, parentId?: number) => {//функция добавления товара или добавки в корзину\n    return () => {\n      selectSearchInputText();\n      const currentProduct = products.find(({ id: productId }) => productId === id);\n      if (!currentProduct) {\n        return;\n      }\n      const typeOfCurrentProduct = currentProduct.type;\n      if (typeOfCurrentProduct === 'addition') {\n        const lastAddedProduct = cartProducts.find(({ id }) => id === (parentId || currentSelectedProductInCart));\n        if (lastAddedProduct) {\n          const { id, productName, price, tax } = currentProduct;\n          addAddition(lastAddedProduct.id, id, productName, price, tax);\n        } else {\n          setAlertMessage({ message: 'Не удалось выбрать добавку', description: 'Товаров нет в корзине' });\n          setIsAlert(true);\n        }\n      } else if (typeOfCurrentProduct === 'product') {\n        const { id, article, productName, price, tax } = currentProduct;\n        addProduct(id, article, productName, price, tax);\n      }\n    }\n  }, [sortedProducts, cartProducts, addAddition, addProduct, setIsAlert]);\n\n  const decrementFromCart = useCallback((id: number, parentId?: number) => {//функция уменьшения продукта или добавки\n    return () => {\n      selectSearchInputText();\n      const currentProduct = products.find(({ id: productId }) => productId === id);\n      if (!currentProduct) {\n        return;\n      }\n      const typeOfCurrentProduct = currentProduct.type;\n      const lastAddedProduct = cartProducts.find(({ id }) => id === (parentId || currentSelectedProductInCart));\n      if (lastAddedProduct) {\n        if (typeOfCurrentProduct === 'addition') {\n          const isAdditionInCart = lastAddedProduct.additions && lastAddedProduct.additions.find(({ id: additionId }) => additionId === id);\n          if (isAdditionInCart) {\n            decrementAddition(lastAddedProduct.id, id)\n          } else {\n            setAlertMessage({ message: 'Не удалось уменьшить количество добавки', description: 'Добавки нет в корзине' });\n            setIsAlert(true);\n          }\n        } else if (typeOfCurrentProduct === 'product') {\n          decrementProduct(id);\n        }\n      } else {\n        setAlertMessage({ message: `Не удалось уменьшить количество ${typeOfCurrentProduct === 'addition' ? 'добавки' : 'товара'}`, description: 'Товара нет в корзине' });\n        setIsAlert(true);\n      }\n    }\n  }, [cartProducts, decrementAddition, decrementProduct, setIsAlert, setAlertMessage]);\n\n  const deleteFromCart = useCallback((id: number, parentId?: number) => {//функция удаления продукта или добавки из корзины\n    return () => {\n      selectSearchInputText();\n      if (parentId) {\n        deleteAddition(parentId, id);\n      } else {\n        deleteProduct(id);\n      }\n    }\n  }, [deleteAddition, deleteProduct]);\n\n  const onBackButtonClick = useCallback(() => {//функция на нажатие кнопки назад\n    history.push(`${ROOT_URL}/menu`)\n  }, [history]);\n\n  //мемоизируем кнопки\n  const DecrementFromCartIcon = useCallback(({ id, parentId }: ActionColumn) => <Icon style={IconStyle} type=\"minus-square\" onClick={decrementFromCart(id, parentId)} />, [decrementFromCart]);\n  const IncrementToCartIcon = useCallback(({ id, parentId }: ActionColumn) => <Icon style={IconStyle} type=\"plus-square\" onClick={addToCart(id, parentId)} />, [addToCart]);\n  const DeleteFromCartIcon = useCallback(({ id, parentId }: ActionColumn) => <Icon style={IconStyle} type=\"close-square\" onClick={deleteFromCart(id, parentId)} />, [deleteFromCart]);\n  const onFreeDeliveryClick = useCallback(() => addDataToFormData('deliveryCost', '0'), [addDataToFormData]);\n\n  const onAlertClose = useCallback(() => setIsAlert(false), [setIsAlert]);//функция на закрытие предупреждения по крестику\n\n  const allKeyDown = useCallback((event: KeyboardEvent) => {//функция-слушатель нажатия на кнопки\n    if (event.code === 'F4') {\n      onBackButtonClick();\n    } else if (event.code === 'F5') {\n      onFreeDeliveryClick();\n    } else if (event.code === 'ArrowUp' || event.code === 'ArrowDown') {\n      keyDownListener(event);\n    } else if (event.key === '+' || event.code === 'Enter') {\n      onPlusOrEnterKeyDown();\n    } else if (event.key === '-') {\n      onMinusKeyDown();\n    }\n  }, [onBackButtonClick, onFreeDeliveryClick, keyDownListener, onPlusOrEnterKeyDown, onMinusKeyDown]);\n\n  useEffect(() => {//слушаем события нажатия кнопок\n    window.addEventListener('keydown', allKeyDown);\n    return () => {\n      window.removeEventListener('keydown', allKeyDown);\n    }\n  }, [allKeyDown]);\n\n  useEffect(() => {//изменяем язык при смене языка\n    setLanguage(langMap[lang]);\n    /* fix бага с переключением языка по нажатию ArrowUp или ArrowDown */\n    const selected: HTMLElement | null = document.querySelector('.cart__products-table .ant-input');\n    if (selected) {\n      selected.focus()\n    }\n  }, [lang]);\n\n  const cartProductsSum = useMemo(() => {//считаем сумму продуктов и дополнений на каждое изменение продуктов\n    let cartProductsProductsSum = 0;\n    let cartProductsAdditionsSum = 0;\n    cartProducts.forEach(product => {\n      cartProductsProductsSum += product.price * product.quantity;\n      if (Array.isArray(product.additions)) {\n        product.additions.forEach(child => {\n          cartProductsAdditionsSum += child.price * child.quantity;\n        });\n      }\n    })\n    return {\n      cartProductsProductsSum,\n      cartProductsAdditionsSum\n    };\n  }, [cartProducts]);\n\n  useEffect(() => {//обновляем значения вычисляемых полей\n    const { cartProductsProductsSum, cartProductsAdditionsSum } = cartProductsSum\n    addDataToFormData('greichten', cartProductsProductsSum.toString());\n\n    addDataToFormData('zutaten', cartProductsAdditionsSum.toString());\n\n    addDataToFormData('mwst_7', (Math.round((cartProductsProductsSum + cartProductsAdditionsSum) * 0.07 * 100) / 100).toString());\n\n    addDataToFormData('mwst_19', (Math.round((cartProductsProductsSum + cartProductsAdditionsSum) * 0.19 * 100) / 100).toString());\n  }, [cartProductsSum, addDataToFormData]);\n\n  useEffect(() => {//вычисляем общую цену\n    const { cartProductsProductsSum, cartProductsAdditionsSum } = cartProductsSum\n    const deliveryCost = parseFloat(formDataState.deliveryCost) | 0;\n    const newTotalPrice = (deliveryCost + (((100 - (discount > 100 ? 0 : discount)) / 100)) * (cartProductsProductsSum + cartProductsAdditionsSum)).toString();\n    if (newTotalPrice !== formDataState['total_price']) {\n      addDataToFormData('total_price', newTotalPrice);\n    }\n  }, [cartProductsSum, discount, formDataState, addDataToFormData]);\n\n  const columns1 = useMemo(() => [\n    {\n      title: language.article,\n      dataIndex: 'article',\n      key: 'articleView',\n    },\n    {\n      title: language.quantity,\n      dataIndex: 'quantity',\n      key: 'quantity',\n    },\n    {\n      title: language.productName,\n      dataIndex: 'productName',\n      width: '60%',\n      key: 'productName',\n      render: ProductNameRenderer\n    },\n    {\n      title: language.price,\n      dataIndex: 'price',\n      key: 'price',\n    },\n    {\n      key: 'deleteFromCart',\n      render: DeleteFromCartIcon\n    },\n    {\n      key: 'decrementFromCart',\n      render: DecrementFromCartIcon\n    },\n    {\n      key: 'incrementToCart',\n      render: IncrementToCartIcon\n    }\n  ], [language, DeleteFromCartIcon, DecrementFromCartIcon, IncrementToCartIcon]);\n\n  const columns2 = useMemo(() => [\n    {\n      title: language.article,\n      dataIndex: 'article',\n      key: 'articleView',\n    },\n    {\n      title: language.productName,\n      dataIndex: 'productName',\n      key: 'productName',\n    },\n    {\n      title: language.price,\n      dataIndex: 'price',\n      key: 'price',\n    },\n    {\n      key: 'decrementFromCart',\n      render: DecrementFromCartIcon\n\n    },\n    {\n      key: 'incrementToCart',\n      render: IncrementToCartIcon\n    }\n  ], [DecrementFromCartIcon, IncrementToCartIcon, language]);\n\n  const cartProductsWithKeys: TableCart[] = useMemo(() => {//проставляем ключи продуктам с бека\n    return cartProducts.map((item) => {\n      const additions = (Array.isArray(item.additions)) ? item.additions.map(child => ({\n        ...child,\n        viewName: `+${child.quantity} ${child.productName}`,\n        key: item.id + ':' + child.id,\n        parentId: item.id,\n        cart: true\n      })) : undefined;\n      return ({\n        ...item,\n        key: (item.article && item.article.toString()) || '0',\n        children: additions,\n        cart: true\n      })\n    });\n  }, [cartProducts]);\n\n  const cartProductsExpandedRowKeys = useMemo(() => cartProducts.map(({ article }) => {\n    if (article) {\n      return article.toString();\n    }\n    return '0';\n  }), [cartProducts]);\n\n  const productsExpandedRowKeys = useMemo(() => sortedProducts.map(({ article }) => {\n    if (article) {\n      return article;\n    }\n    return '0';\n  }), [sortedProducts]);\n\n  useEffect(() => {//проверяем не вышли ли мы за пределы области видимости. Если вышли - скроллимся\n    const container = document.querySelector('.cart__products-table .ant-table-body');\n    const curItem = document.querySelector('.didolf');\n    if (container && curItem) {\n      const containerRect = container.getBoundingClientRect();\n      const curItemRect = curItem.getBoundingClientRect();\n      if (containerRect.bottom <= curItemRect.bottom || containerRect.top >= curItemRect.top) {\n        const timeoutId = setTimeout(scrollToCurrentSelectedItem, 0);\n        return () => clearTimeout(timeoutId);\n      }\n    }\n  }, [currentSelection]);\n\n  return (\n    <div className=\"cart\">\n      {isAlert && <Alert\n        className=\"warning\"\n        message={alertMessage.message}\n        description={alertMessage.description}\n        type=\"error\"\n        closable\n        onClose={onAlertClose}\n      />}\n      <div className=\"cart__tables\">\n        <div className=\"cart__order-table\">\n          <div className=\"cart__order\">\n            <Input placeholder={language.comment} />\n            <Table components={customTableComponents} expandIcon={NullComponent} pagination={false} scroll={cartTableScrollParams} bordered expandedRowKeys={cartProductsExpandedRowKeys} defaultExpandAllRows columns={columns1} dataSource={cartProductsWithKeys} />\n          </div>\n          <SumForm />\n        </div>\n        <div className=\"cart__products-table\">\n          <Input value={search} prefix={<Icon type=\"search\" />} onChange={onSearchChange} autoFocus />\n          <Table components={customTableComponents} pagination={false} scroll={proudctsTableScrollParams} bordered expandIcon={NullComponent} expandedRowKeys={productsExpandedRowKeys} defaultExpandAllRows columns={columns2} dataSource={filteredProducts} />\n        </div>\n      </div>\n      <div className=\"cart__buttons\">\n        <Button type=\"danger\" size=\"large\" onClick={onBackButtonClick}>{language.back} / F4</Button>\n        <Button type=\"dashed\" size=\"large\" onClick={onFreeDeliveryClick}>{language.freeDelivery} / F5</Button>\n        <Button type=\"primary\" size=\"large\">{language.print} / F2</Button>\n      </div>\n    </div>\n  )\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter<RouteComponentProps<CartDispatchProps & CartOwnProps & CartStateProps>, any>(Cart));\n","import {\n  addProductToCart,\n  addAdditionToProductInCart,\n  incrementQuantityOfProductInCart,\n  decrementQuantityOfProductInCart,\n  incrementQuantityOfAdditionOfProduct,\n  decrementQuantityOfAdditionOfProduct,\n  deleteProductFromCart,\n  deleteAdditionOfProductFromCart,\n  addToFormData\n} from '../../redux/actions';\nimport { State } from '../../redux/types';\nimport { MapDispatchToPropsFunction, MapStateToProps } from 'react-redux';\nimport { CartOwnProps, CartDispatchProps, CartStateProps } from './CartTypes';\n\n\nexport const mapStateToProps: MapStateToProps<CartStateProps, CartOwnProps, State> = (state) => {\n  return {\n    cartProducts: state.cartProducts,\n    formDataState: state.formDataState,\n    lang: state.languages.lang\n  }\n};\n\n\n\nexport const mapDispatchToProps: MapDispatchToPropsFunction<CartDispatchProps, CartOwnProps> = (dispatch) => {\n  return {\n    addProduct(id: number, article: string, productName: string, price: number, tax: '7' | '19') {\n      dispatch(addProductToCart(id, article, productName, price, tax));\n    },\n    addAddition(productId: number, additionId: number, additionName: string, additionPrice: number, additionTax: '7' | '19') {\n      dispatch(addAdditionToProductInCart(productId, additionId, additionName, additionPrice, additionTax));\n    },\n    deleteProduct(productId: number) {\n      dispatch(deleteProductFromCart(productId));\n    },\n    deleteAddition(productId: number, additionId: number) {\n      dispatch(deleteAdditionOfProductFromCart(productId, additionId));\n    },\n    incrementProduct(productId: number) {\n      dispatch(incrementQuantityOfProductInCart(productId));\n    },\n    decrementProduct(productId: number) {\n      dispatch(decrementQuantityOfProductInCart(productId));\n    },\n    incrementAddition(productId: number, additionId: number) {\n      dispatch(incrementQuantityOfAdditionOfProduct(productId, additionId));\n    },\n    decrementAddition(productId: number, additionId: number) {\n      dispatch(decrementQuantityOfAdditionOfProduct(productId, additionId));\n    },\n    addDataToFormData(id: string, value: string) {\n      dispatch(addToFormData(id, value))\n    },\n  }\n};\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { Menu, Icon, Typography, Radio } from 'antd';\nimport { RadioChangeEvent } from 'antd/lib/radio';\nimport { withRouter } from 'react-router-dom';\nimport { RouteComponentProps } from 'react-router';\nimport { connect, MapStateToProps, MapDispatchToPropsFunction } from 'react-redux';\n\nimport './Menu.css';\n\nimport { langMap } from '../../lang';\nimport { logoutUser, changeLanguage } from '../../redux/actions';\n\nimport { State } from '../../redux/types';\nimport { MenuPageProps, MenuPageStateProps, MenuPageDispatchProps, MenuPageOwnProps } from './types';\nimport { ClickParam } from 'antd/lib/menu';\n\nimport { ROOT_URL } from '../../constants/rootUrl';\n\nconst { Text } = Typography;\n\nconst MenuPage = ({ lang, userRole, logoutFromUser, changeLang, history, collapsed }: MenuPageProps) => {\n  const [language, setLanguage] = useState(langMap[lang]);\n\n  useEffect(() => {\n    setLanguage(langMap[lang]);\n  }, [lang, setLanguage]);\n\n  const logout = useCallback((e: ClickParam) => {\n    logoutFromUser();\n    history.push(`${ROOT_URL}/`);\n  }, [logoutFromUser, history]);\n\n  const handleLangChange = useCallback((e: RadioChangeEvent) => {\n    const { target: { value } } = e;\n    changeLang(value);\n  }, [changeLang]);\n\n  return (<div className=\"menu\">\n    <Menu style={{ height: '100vh' }} defaultSelectedKeys={['2']} mode=\"inline\">\n      <Menu.Item disabled>\n        <Icon type=\"tag\" />\n        {!collapsed && <Radio.Group value={lang} onChange={handleLangChange}>\n          <Radio.Button value=\"ru\">ru</Radio.Button>\n          <Radio.Button value=\"de\">de</Radio.Button>\n        </Radio.Group>}\n      </Menu.Item>\n      <Menu.Item key=\"1\" onClick={logout} className=\"logout-button\">\n        <Icon type=\"logout\" />\n        <span>{language.logout}</span>\n      </Menu.Item>\n      <Menu.Item key=\"2\">\n        <Icon type=\"phone\" />\n        <span>{language.callForm}</span>\n      </Menu.Item>\n      <Menu.Item key=\"3\">\n        <Icon type=\"shopping-cart\" />\n        <span>{language.allOrders}</span>\n      </Menu.Item>\n      <Menu.Item key=\"4\">\n        <Icon type=\"dashboard\" />\n        <span>{language.cookingMonitor}</span>\n      </Menu.Item>\n      <Menu.Item key=\"5\">\n        <Icon type=\"car\" />\n        <span>{language.carMonitor}</span>\n      </Menu.Item>\n      <Menu.Item key=\"6\">\n        <Icon type=\"bar-chart\" />\n        <span>{language.report}</span>\n      </Menu.Item>\n      <Menu.Item key=\"7\">\n        <Icon type=\"setting\" />\n        <span>{language.settings}</span>\n      </Menu.Item>\n      <Menu.Item key=\"8\">\n        <Icon type=\"question-circle\" />\n        <span>{language.help}</span>\n      </Menu.Item>\n    </Menu>\n    <Text style={{ textAlign: 'center', paddingBottom: '20px', borderRight: '1px solid #e8e8e8' }}>{userRole}</Text>\n  </div>);\n};\n\nconst mapStatetoProps: MapStateToProps<MenuPageStateProps, MenuPageOwnProps, State> = (state) => {\n  return {\n    lang: state.languages.lang,\n    userRole: state.user.role\n  }\n};\n\nconst mapDispatchToProps: MapDispatchToPropsFunction<MenuPageDispatchProps, MenuPageOwnProps> = (dispatch) => ({\n  logoutFromUser() {\n    dispatch(logoutUser());\n  },\n  changeLang(lang: 'ru' | 'de') {\n    dispatch(changeLanguage(lang));\n  }\n});\n\nexport const LeftMenu = connect(\n  mapStatetoProps,\n  mapDispatchToProps\n)(withRouter<RouteComponentProps<MenuPageDispatchProps & MenuPageOwnProps & MenuPageStateProps>, any>(MenuPage));//FIXME\n","import React, { useState, useCallback, useEffect } from 'react';\nimport { Route } from \"react-router-dom\";\n\nimport { Layout } from 'antd';\nimport DeliveryForm from '../../components/DeliveryForm';\n\nimport { withRouter } from 'react-router-dom';\nimport { connect} from 'react-redux';\n\n//types\n\nimport { Auth } from '../../components/Auth';\nimport Cart from '../../components/Cart';\nimport { LeftMenu } from '../../components/LeftMenu';\n\nimport { ROOT_URL } from '../../constants/rootUrl';\n\nimport { RouteComponentProps } from 'react-router';\nimport { MapStateToProps } from 'react-redux';\n\nimport { State } from '../../redux/types';\nimport { AppOwnProps, AppStateProps, AppProps } from './AppTypes';\n\nconst { Sider } = Layout;\n\nconst App = ({ userRole, history }: AppProps) => {\n  const [collapsed, setCollapsed] = useState(false);\n\n  useEffect(() => {\n    if (!userRole) {\n      history.push(`${ROOT_URL}/`);\n    }\n  }, [userRole]);\n\n  const handleCollapse = useCallback((collapsed: boolean) => {\n    setCollapsed(collapsed);\n  }, [setCollapsed]);\n\n  return (\n    <Layout style={{ minHeight: '100vh','--left-menu-width': collapsed ? '80px' : '200px' } as any}>\n      {window.location.pathname !==  `${ROOT_URL}/` && <Sider collapsible onCollapse={handleCollapse} theme=\"light\" style={{\n        overflow: 'auto',\n        height: '100vh',\n        left: 0,\n      }}>\n        <LeftMenu collapsed={collapsed}/>\n    </Sider>}\n          <Route path={`${ROOT_URL}/menu`} component={DeliveryForm} />\n          <Route path={`${ROOT_URL}/index.html`} exact component={Auth} />\n          <Route path={`${ROOT_URL}/`} exact component={Auth} />\n          <Route path={`${ROOT_URL}/finish`} component={Cart} />\n    </Layout>\n  );\n};\n\nconst mapStatetoProps: MapStateToProps<AppStateProps, AppOwnProps, State> = (state) => {\n  return {\n    userRole: state.user.role\n  }\n};\n\nexport default connect(\n  mapStatetoProps\n)(withRouter<RouteComponentProps<AppOwnProps & AppStateProps>, any>(App));//FIXME\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { Provider } from 'react-redux';\n\nimport store from './redux';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <Router>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </Router>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}